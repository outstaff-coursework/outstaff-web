{"ast":null,"code":"import { BaseTransport, getTransportBody, LogLevel, VERSION } from '@grafana/faro-core';\nexport class ConsoleTransport extends BaseTransport {\n  constructor(options = {}) {\n    super();\n    this.options = options;\n    this.name = '@grafana/faro-web-sdk:transport-console';\n    this.version = VERSION;\n  }\n  send(item) {\n    var _a;\n    return this.unpatchedConsole[(_a = this.options.level) !== null && _a !== void 0 ? _a : LogLevel.DEBUG]('New event', getTransportBody([item]));\n  }\n}","map":{"version":3,"names":["BaseTransport","getTransportBody","LogLevel","VERSION","ConsoleTransport","constructor","options","name","version","send","item","unpatchedConsole","_a","level","DEBUG"],"sources":["/home/egor/node_modules/@grafana/faro-web-sdk/src/transports/console/transport.ts"],"sourcesContent":["import { BaseTransport, getTransportBody, LogLevel, VERSION } from '@grafana/faro-core';\nimport type { TransportItem } from '@grafana/faro-core';\n\nimport type { ConsoleTransportOptions } from './types';\n\nexport class ConsoleTransport extends BaseTransport {\n  readonly name = '@grafana/faro-web-sdk:transport-console';\n  readonly version = VERSION;\n\n  constructor(private options: ConsoleTransportOptions = {}) {\n    super();\n  }\n\n  send(item: TransportItem): void {\n    return this.unpatchedConsole[this.options.level ?? LogLevel.DEBUG]('New event', getTransportBody([item]));\n  }\n}\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,gBAAgB,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,oBAAoB;AAKvF,OAAM,MAAOC,gBAAiB,SAAQJ,aAAa;EAIjDK,YAAoBC,OAAA,GAAmC,EAAE;IACvD,KAAK,EAAE;IADW,KAAAA,OAAO,GAAPA,OAAO;IAHlB,KAAAC,IAAI,GAAG,yCAAyC;IAChD,KAAAC,OAAO,GAAGL,OAAO;EAI1B;EAEAM,IAAIA,CAACC,IAAmB;;IACtB,OAAO,IAAI,CAACC,gBAAgB,CAAC,CAAAC,EAAA,OAAI,CAACN,OAAO,CAACO,KAAK,cAAAD,EAAA,cAAAA,EAAA,GAAIV,QAAQ,CAACY,KAAK,CAAC,CAAC,WAAW,EAAEb,gBAAgB,CAAC,CAACS,IAAI,CAAC,CAAC,CAAC;EAC3G"},"metadata":{},"sourceType":"module","externalDependencies":[]}