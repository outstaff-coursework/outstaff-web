{"ast":null,"code":"export var TransportItemType;\n(function (TransportItemType) {\n  TransportItemType[\"EXCEPTION\"] = \"exception\";\n  TransportItemType[\"LOG\"] = \"log\";\n  TransportItemType[\"MEASUREMENT\"] = \"measurement\";\n  TransportItemType[\"TRACE\"] = \"trace\";\n  TransportItemType[\"EVENT\"] = \"event\";\n})(TransportItemType || (TransportItemType = {}));\nexport const transportItemTypeToBodyKey = {\n  [TransportItemType.EXCEPTION]: 'exceptions',\n  [TransportItemType.LOG]: 'logs',\n  [TransportItemType.MEASUREMENT]: 'measurements',\n  [TransportItemType.TRACE]: 'traces',\n  [TransportItemType.EVENT]: 'events'\n};","map":{"version":3,"names":["TransportItemType","transportItemTypeToBodyKey","EXCEPTION","LOG","MEASUREMENT","TRACE","EVENT"],"sources":["/home/egor/node_modules/@grafana/faro-core/src/transports/const.ts"],"sourcesContent":["import type { BodyKey } from './types';\n\nexport enum TransportItemType {\n  EXCEPTION = 'exception',\n  LOG = 'log',\n  MEASUREMENT = 'measurement',\n  TRACE = 'trace',\n  EVENT = 'event',\n}\n\nexport const transportItemTypeToBodyKey: Record<TransportItemType, BodyKey> = {\n  [TransportItemType.EXCEPTION]: 'exceptions',\n  [TransportItemType.LOG]: 'logs',\n  [TransportItemType.MEASUREMENT]: 'measurements',\n  [TransportItemType.TRACE]: 'traces',\n  [TransportItemType.EVENT]: 'events',\n} as const;\n"],"mappings":"AAEA,WAAYA,iBAMX;AAND,WAAYA,iBAAiB;EAC3BA,iBAAA,2BAAuB;EACvBA,iBAAA,eAAW;EACXA,iBAAA,+BAA2B;EAC3BA,iBAAA,mBAAe;EACfA,iBAAA,mBAAe;AACjB,CAAC,EANWA,iBAAiB,KAAjBA,iBAAiB;AAQ7B,OAAO,MAAMC,0BAA0B,GAAuC;EAC5E,CAACD,iBAAiB,CAACE,SAAS,GAAG,YAAY;EAC3C,CAACF,iBAAiB,CAACG,GAAG,GAAG,MAAM;EAC/B,CAACH,iBAAiB,CAACI,WAAW,GAAG,cAAc;EAC/C,CAACJ,iBAAiB,CAACK,KAAK,GAAG,QAAQ;EACnC,CAACL,iBAAiB,CAACM,KAAK,GAAG;CACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}