{"ast":null,"code":"import { faro } from '@grafana/faro-core';\nexport function isSampled() {\n  var _a, _b, _c;\n  const sendAllSignals = 1;\n  const sessionTracking = faro.config.sessionTracking;\n  let samplingRate = (_c = (_b = (_a = sessionTracking === null || sessionTracking === void 0 ? void 0 : sessionTracking.sampler) === null || _a === void 0 ? void 0 : _a.call(sessionTracking, {\n    metas: faro.metas.value\n  })) !== null && _b !== void 0 ? _b : sessionTracking === null || sessionTracking === void 0 ? void 0 : sessionTracking.samplingRate) !== null && _c !== void 0 ? _c : sendAllSignals;\n  if (typeof samplingRate !== 'number') {\n    const sendNoSignals = 0;\n    samplingRate = sendNoSignals;\n  }\n  return Math.random() < samplingRate;\n}","map":{"version":3,"names":["faro","isSampled","sendAllSignals","sessionTracking","config","samplingRate","_c","_b","_a","sampler","call","metas","value","sendNoSignals","Math","random"],"sources":["/home/egor/node_modules/@grafana/faro-web-sdk/src/instrumentations/session/sessionManager/sampling.ts"],"sourcesContent":["import { faro } from '@grafana/faro-core';\n\nexport function isSampled(): boolean {\n  const sendAllSignals = 1;\n  const sessionTracking = faro.config.sessionTracking;\n  let samplingRate =\n    sessionTracking?.sampler?.({ metas: faro.metas.value }) ?? sessionTracking?.samplingRate ?? sendAllSignals;\n\n  if (typeof samplingRate !== 'number') {\n    const sendNoSignals = 0;\n    samplingRate = sendNoSignals;\n  }\n\n  return Math.random() < samplingRate;\n}\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,oBAAoB;AAEzC,OAAM,SAAUC,SAASA,CAAA;;EACvB,MAAMC,cAAc,GAAG,CAAC;EACxB,MAAMC,eAAe,GAAGH,IAAI,CAACI,MAAM,CAACD,eAAe;EACnD,IAAIE,YAAY,GACd,CAAAC,EAAA,IAAAC,EAAA,IAAAC,EAAA,GAAAL,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEM,OAAO,cAAAD,EAAA,uBAAAA,EAAA,CAAAE,IAAA,CAAAP,eAAA,EAAG;IAAEQ,KAAK,EAAEX,IAAI,CAACW,KAAK,CAACC;EAAK,CAAE,CAAC,cAAAL,EAAA,cAAAA,EAAA,GAAIJ,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEE,YAAY,cAAAC,EAAA,cAAAA,EAAA,GAAIJ,cAAc;EAE5G,IAAI,OAAOG,YAAY,KAAK,QAAQ,EAAE;IACpC,MAAMQ,aAAa,GAAG,CAAC;IACvBR,YAAY,GAAGQ,aAAa;;EAG9B,OAAOC,IAAI,CAACC,MAAM,EAAE,GAAGV,YAAY;AACrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}