{"ast":null,"code":"import { defaultInternalLogger } from '../internalLogger';\nimport { defaultUnpatchedConsole } from '../unpatchedConsole';\nexport class BaseExtension {\n  constructor() {\n    this.unpatchedConsole = defaultUnpatchedConsole;\n    this.internalLogger = defaultInternalLogger;\n    this.config = {};\n    this.metas = {};\n  }\n  logDebug() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    this.internalLogger.debug(\"\".concat(this.name, \"\\n\"), ...args);\n  }\n  logInfo() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    this.internalLogger.info(\"\".concat(this.name, \"\\n\"), ...args);\n  }\n  logWarn() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    this.internalLogger.warn(\"\".concat(this.name, \"\\n\"), ...args);\n  }\n  logError() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    this.internalLogger.error(\"\".concat(this.name, \"\\n\"), ...args);\n  }\n}","map":{"version":3,"names":["defaultInternalLogger","defaultUnpatchedConsole","BaseExtension","constructor","unpatchedConsole","internalLogger","config","metas","logDebug","_len","arguments","length","args","Array","_key","debug","concat","name","logInfo","_len2","_key2","info","logWarn","_len3","_key3","warn","logError","_len4","_key4","error"],"sources":["/home/egor/node_modules/@grafana/faro-core/src/extensions/baseExtension.ts"],"sourcesContent":["import type { Config } from '../config';\nimport { defaultInternalLogger } from '../internalLogger';\nimport type { Metas } from '../metas';\nimport { defaultUnpatchedConsole } from '../unpatchedConsole';\n\nimport type { Extension } from './types';\n\nexport abstract class BaseExtension implements Extension {\n  abstract readonly name: string;\n  abstract readonly version: string;\n\n  unpatchedConsole = defaultUnpatchedConsole;\n  internalLogger = defaultInternalLogger;\n  config = {} as Config;\n  metas = {} as Metas;\n\n  logDebug(...args: unknown[]): void {\n    this.internalLogger.debug(`${this.name}\\n`, ...args);\n  }\n\n  logInfo(...args: unknown[]): void {\n    this.internalLogger.info(`${this.name}\\n`, ...args);\n  }\n\n  logWarn(...args: unknown[]): void {\n    this.internalLogger.warn(`${this.name}\\n`, ...args);\n  }\n\n  logError(...args: unknown[]): void {\n    this.internalLogger.error(`${this.name}\\n`, ...args);\n  }\n}\n"],"mappings":"AACA,SAASA,qBAAqB,QAAQ,mBAAmB;AAEzD,SAASC,uBAAuB,QAAQ,qBAAqB;AAI7D,OAAM,MAAgBC,aAAa;EAAnCC,YAAA;IAIE,KAAAC,gBAAgB,GAAGH,uBAAuB;IAC1C,KAAAI,cAAc,GAAGL,qBAAqB;IACtC,KAAAM,MAAM,GAAG,EAAY;IACrB,KAAAC,KAAK,GAAG,EAAW;EAiBrB;EAfEC,QAAQA,CAAA,EAAmB;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAfC,IAAe,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAfF,IAAe,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IACzB,IAAI,CAACT,cAAc,CAACU,KAAK,IAAAC,MAAA,CAAI,IAAI,CAACC,IAAI,SAAM,GAAGL,IAAI,CAAC;EACtD;EAEAM,OAAOA,CAAA,EAAmB;IAAA,SAAAC,KAAA,GAAAT,SAAA,CAAAC,MAAA,EAAfC,IAAe,OAAAC,KAAA,CAAAM,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAfR,IAAe,CAAAQ,KAAA,IAAAV,SAAA,CAAAU,KAAA;IAAA;IACxB,IAAI,CAACf,cAAc,CAACgB,IAAI,IAAAL,MAAA,CAAI,IAAI,CAACC,IAAI,SAAM,GAAGL,IAAI,CAAC;EACrD;EAEAU,OAAOA,CAAA,EAAmB;IAAA,SAAAC,KAAA,GAAAb,SAAA,CAAAC,MAAA,EAAfC,IAAe,OAAAC,KAAA,CAAAU,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAfZ,IAAe,CAAAY,KAAA,IAAAd,SAAA,CAAAc,KAAA;IAAA;IACxB,IAAI,CAACnB,cAAc,CAACoB,IAAI,IAAAT,MAAA,CAAI,IAAI,CAACC,IAAI,SAAM,GAAGL,IAAI,CAAC;EACrD;EAEAc,QAAQA,CAAA,EAAmB;IAAA,SAAAC,KAAA,GAAAjB,SAAA,CAAAC,MAAA,EAAfC,IAAe,OAAAC,KAAA,CAAAc,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAfhB,IAAe,CAAAgB,KAAA,IAAAlB,SAAA,CAAAkB,KAAA;IAAA;IACzB,IAAI,CAACvB,cAAc,CAACwB,KAAK,IAAAb,MAAA,CAAI,IAAI,CAACC,IAAI,SAAM,GAAGL,IAAI,CAAC;EACtD"},"metadata":{},"sourceType":"module","externalDependencies":[]}