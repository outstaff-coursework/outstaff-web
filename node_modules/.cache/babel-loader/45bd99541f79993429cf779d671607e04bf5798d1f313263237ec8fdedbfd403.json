{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExponentMapping } from './ExponentMapping';\nimport { LogarithmMapping } from './LogarithmMapping';\nimport { MappingError } from './types';\nvar MIN_SCALE = -10;\nvar MAX_SCALE = 20;\nvar PREBUILT_MAPPINGS = Array.from({\n  length: 31\n}, function (_, i) {\n  if (i > 10) {\n    return new LogarithmMapping(i - 10);\n  }\n  return new ExponentMapping(i - 10);\n});\n/**\n * getMapping returns an appropriate mapping for the given scale. For scales -10\n * to 0 the underlying type will be ExponentMapping. For scales 1 to 20 the\n * underlying type will be LogarithmMapping.\n * @param scale a number in the range [-10, 20]\n * @returns {Mapping}\n */\nexport function getMapping(scale) {\n  if (scale > MAX_SCALE || scale < MIN_SCALE) {\n    throw new MappingError(\"expected scale >= \" + MIN_SCALE + \" && <= \" + MAX_SCALE + \", got: \" + scale);\n  }\n  // mappings are offset by 10. scale -10 is at position 0 and scale 20 is at 30\n  return PREBUILT_MAPPINGS[scale + 10];\n}","map":{"version":3,"names":["ExponentMapping","LogarithmMapping","MappingError","MIN_SCALE","MAX_SCALE","PREBUILT_MAPPINGS","Array","from","length","_","i","getMapping","scale"],"sources":["/home/egor/node_modules/@opentelemetry/sdk-metrics/src/aggregator/exponential-histogram/mapping/getMapping.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExponentMapping } from './ExponentMapping';\nimport { LogarithmMapping } from './LogarithmMapping';\nimport { MappingError, Mapping } from './types';\n\nconst MIN_SCALE = -10;\nconst MAX_SCALE = 20;\nconst PREBUILT_MAPPINGS = Array.from({ length: 31 }, (_, i) => {\n  if (i > 10) {\n    return new LogarithmMapping(i - 10);\n  }\n  return new ExponentMapping(i - 10);\n});\n\n/**\n * getMapping returns an appropriate mapping for the given scale. For scales -10\n * to 0 the underlying type will be ExponentMapping. For scales 1 to 20 the\n * underlying type will be LogarithmMapping.\n * @param scale a number in the range [-10, 20]\n * @returns {Mapping}\n */\nexport function getMapping(scale: number): Mapping {\n  if (scale > MAX_SCALE || scale < MIN_SCALE) {\n    throw new MappingError(\n      `expected scale >= ${MIN_SCALE} && <= ${MAX_SCALE}, got: ${scale}`\n    );\n  }\n  // mappings are offset by 10. scale -10 is at position 0 and scale 20 is at 30\n  return PREBUILT_MAPPINGS[scale + 10];\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAeA,SAASA,eAAe,QAAQ,mBAAmB;AACnD,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,YAAY,QAAiB,SAAS;AAE/C,IAAMC,SAAS,GAAG,CAAC,EAAE;AACrB,IAAMC,SAAS,GAAG,EAAE;AACpB,IAAMC,iBAAiB,GAAGC,KAAK,CAACC,IAAI,CAAC;EAAEC,MAAM,EAAE;AAAE,CAAE,EAAE,UAACC,CAAC,EAAEC,CAAC;EACxD,IAAIA,CAAC,GAAG,EAAE,EAAE;IACV,OAAO,IAAIT,gBAAgB,CAACS,CAAC,GAAG,EAAE,CAAC;;EAErC,OAAO,IAAIV,eAAe,CAACU,CAAC,GAAG,EAAE,CAAC;AACpC,CAAC,CAAC;AAEF;;;;;;;AAOA,OAAM,SAAUC,UAAUA,CAACC,KAAa;EACtC,IAAIA,KAAK,GAAGR,SAAS,IAAIQ,KAAK,GAAGT,SAAS,EAAE;IAC1C,MAAM,IAAID,YAAY,CACpB,uBAAqBC,SAAS,eAAUC,SAAS,eAAUQ,KAAO,CACnE;;EAEH;EACA,OAAOP,iBAAiB,CAACO,KAAK,GAAG,EAAE,CAAC;AACtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}