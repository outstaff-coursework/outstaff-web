{"ast":null,"code":"import { defaultUnpatchedConsole } from '../unpatchedConsole';\nimport { noop } from '../utils';\nimport { defaultInternalLogger, defaultInternalLoggerLevel, InternalLoggerLevel } from './const';\nexport function createInternalLogger(unpatchedConsole = defaultUnpatchedConsole, internalLoggerLevel = defaultInternalLoggerLevel) {\n  const internalLogger = defaultInternalLogger;\n  if (internalLoggerLevel > InternalLoggerLevel.OFF) {\n    internalLogger.error = internalLoggerLevel >= InternalLoggerLevel.ERROR ? function (...args) {\n      unpatchedConsole.error(`${internalLogger.prefix}\\n`, ...args);\n    } : noop;\n    internalLogger.warn = internalLoggerLevel >= InternalLoggerLevel.WARN ? function (...args) {\n      unpatchedConsole.warn(`${internalLogger.prefix}\\n`, ...args);\n    } : noop;\n    internalLogger.info = internalLoggerLevel >= InternalLoggerLevel.INFO ? function (...args) {\n      unpatchedConsole.info(`${internalLogger.prefix}\\n`, ...args);\n    } : noop;\n    internalLogger.debug = internalLoggerLevel >= InternalLoggerLevel.VERBOSE ? function (...args) {\n      unpatchedConsole.debug(`${internalLogger.prefix}\\n`, ...args);\n    } : noop;\n  }\n  return internalLogger;\n}","map":{"version":3,"names":["defaultUnpatchedConsole","noop","defaultInternalLogger","defaultInternalLoggerLevel","InternalLoggerLevel","createInternalLogger","unpatchedConsole","internalLoggerLevel","internalLogger","OFF","error","ERROR","args","prefix","warn","WARN","info","INFO","debug","VERBOSE"],"sources":["/home/egor/node_modules/@grafana/faro-core/src/internalLogger/createInternalLogger.ts"],"sourcesContent":["import { defaultUnpatchedConsole } from '../unpatchedConsole';\nimport type { UnpatchedConsole } from '../unpatchedConsole';\nimport { noop } from '../utils';\n\nimport { defaultInternalLogger, defaultInternalLoggerLevel, InternalLoggerLevel } from './const';\nimport type { InternalLogger } from './types';\n\nexport function createInternalLogger(\n  unpatchedConsole: UnpatchedConsole = defaultUnpatchedConsole,\n  internalLoggerLevel = defaultInternalLoggerLevel\n): InternalLogger {\n  const internalLogger = defaultInternalLogger;\n\n  if (internalLoggerLevel > InternalLoggerLevel.OFF) {\n    internalLogger.error =\n      internalLoggerLevel >= InternalLoggerLevel.ERROR\n        ? function (...args) {\n            unpatchedConsole.error(`${internalLogger.prefix}\\n`, ...args);\n          }\n        : noop;\n\n    internalLogger.warn =\n      internalLoggerLevel >= InternalLoggerLevel.WARN\n        ? function (...args) {\n            unpatchedConsole.warn(`${internalLogger.prefix}\\n`, ...args);\n          }\n        : noop;\n\n    internalLogger.info =\n      internalLoggerLevel >= InternalLoggerLevel.INFO\n        ? function (...args) {\n            unpatchedConsole.info(`${internalLogger.prefix}\\n`, ...args);\n          }\n        : noop;\n\n    internalLogger.debug =\n      internalLoggerLevel >= InternalLoggerLevel.VERBOSE\n        ? function (...args) {\n            unpatchedConsole.debug(`${internalLogger.prefix}\\n`, ...args);\n          }\n        : noop;\n  }\n\n  return internalLogger;\n}\n"],"mappings":"AAAA,SAASA,uBAAuB,QAAQ,qBAAqB;AAE7D,SAASC,IAAI,QAAQ,UAAU;AAE/B,SAASC,qBAAqB,EAAEC,0BAA0B,EAAEC,mBAAmB,QAAQ,SAAS;AAGhG,OAAM,SAAUC,oBAAoBA,CAClCC,gBAAA,GAAqCN,uBAAuB,EAC5DO,mBAAmB,GAAGJ,0BAA0B;EAEhD,MAAMK,cAAc,GAAGN,qBAAqB;EAE5C,IAAIK,mBAAmB,GAAGH,mBAAmB,CAACK,GAAG,EAAE;IACjDD,cAAc,CAACE,KAAK,GAClBH,mBAAmB,IAAIH,mBAAmB,CAACO,KAAK,GAC5C,UAAU,GAAGC,IAAI;MACfN,gBAAgB,CAACI,KAAK,CAAC,GAAGF,cAAc,CAACK,MAAM,IAAI,EAAE,GAAGD,IAAI,CAAC;IAC/D,CAAC,GACDX,IAAI;IAEVO,cAAc,CAACM,IAAI,GACjBP,mBAAmB,IAAIH,mBAAmB,CAACW,IAAI,GAC3C,UAAU,GAAGH,IAAI;MACfN,gBAAgB,CAACQ,IAAI,CAAC,GAAGN,cAAc,CAACK,MAAM,IAAI,EAAE,GAAGD,IAAI,CAAC;IAC9D,CAAC,GACDX,IAAI;IAEVO,cAAc,CAACQ,IAAI,GACjBT,mBAAmB,IAAIH,mBAAmB,CAACa,IAAI,GAC3C,UAAU,GAAGL,IAAI;MACfN,gBAAgB,CAACU,IAAI,CAAC,GAAGR,cAAc,CAACK,MAAM,IAAI,EAAE,GAAGD,IAAI,CAAC;IAC9D,CAAC,GACDX,IAAI;IAEVO,cAAc,CAACU,KAAK,GAClBX,mBAAmB,IAAIH,mBAAmB,CAACe,OAAO,GAC9C,UAAU,GAAGP,IAAI;MACfN,gBAAgB,CAACY,KAAK,CAAC,GAAGV,cAAc,CAACK,MAAM,IAAI,EAAE,GAAGD,IAAI,CAAC;IAC/D,CAAC,GACDX,IAAI;;EAGZ,OAAOO,cAAc;AACvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}