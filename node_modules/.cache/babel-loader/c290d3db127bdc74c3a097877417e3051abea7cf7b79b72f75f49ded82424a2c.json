{"ast":null,"code":"/**\n * Tail based throttle which caches the args of the last call and updates\n */\nexport function throttle(callback, delay) {\n  let pause = false;\n  let lastPending;\n  const timeoutBehavior = () => {\n    if (lastPending == null) {\n      pause = false;\n      return;\n    }\n    callback(...lastPending);\n    lastPending = null;\n    setTimeout(timeoutBehavior, delay);\n  };\n  return (...args) => {\n    if (pause) {\n      lastPending = args;\n      return;\n    }\n    callback(...args);\n    pause = true;\n    setTimeout(timeoutBehavior, delay);\n  };\n}","map":{"version":3,"names":["throttle","callback","delay","pause","lastPending","timeoutBehavior","setTimeout","args"],"sources":["/home/egor/node_modules/@grafana/faro-web-sdk/src/utils/throttle.ts"],"sourcesContent":["/**\n * Tail based throttle which caches the args of the last call and updates\n */\nexport function throttle<T extends (...args: any[]) => void>(callback: T, delay: number) {\n  let pause = false;\n  let lastPending: Parameters<T> | null;\n\n  const timeoutBehavior = () => {\n    if (lastPending == null) {\n      pause = false;\n      return;\n    }\n\n    callback(...lastPending);\n    lastPending = null;\n    setTimeout(timeoutBehavior, delay);\n  };\n\n  return (...args: Parameters<T>) => {\n    if (pause) {\n      lastPending = args;\n      return;\n    }\n\n    callback(...args);\n    pause = true;\n    setTimeout(timeoutBehavior, delay);\n  };\n}\n"],"mappings":"AAAA;;;AAGA,OAAM,SAAUA,QAAQA,CAAqCC,QAAW,EAAEC,KAAa;EACrF,IAAIC,KAAK,GAAG,KAAK;EACjB,IAAIC,WAAiC;EAErC,MAAMC,eAAe,GAAGA,CAAA,KAAK;IAC3B,IAAID,WAAW,IAAI,IAAI,EAAE;MACvBD,KAAK,GAAG,KAAK;MACb;;IAGFF,QAAQ,CAAC,GAAGG,WAAW,CAAC;IACxBA,WAAW,GAAG,IAAI;IAClBE,UAAU,CAACD,eAAe,EAAEH,KAAK,CAAC;EACpC,CAAC;EAED,OAAO,CAAC,GAAGK,IAAmB,KAAI;IAChC,IAAIJ,KAAK,EAAE;MACTC,WAAW,GAAGG,IAAI;MAClB;;IAGFN,QAAQ,CAAC,GAAGM,IAAI,CAAC;IACjBJ,KAAK,GAAG,IAAI;IACZG,UAAU,CAACD,eAAe,EAAEH,KAAK,CAAC;EACpC,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}