{"ast":null,"code":"import { globalObject } from '../globalObject';\nexport function setFaroOnGlobalObject(faro) {\n  if (!faro.config.preventGlobalExposure) {\n    faro.internalLogger.debug(`Registering public faro reference in the global scope using \"${faro.config.globalObjectKey}\" key`);\n    if (faro.config.globalObjectKey in globalObject) {\n      faro.internalLogger.warn(`Skipping global registration due to key \"${faro.config.globalObjectKey}\" being used already. Please set \"globalObjectKey\" to something else or set \"preventGlobalExposure\" to \"true\"`);\n      return;\n    }\n    Object.defineProperty(globalObject, faro.config.globalObjectKey, {\n      configurable: false,\n      writable: false,\n      value: faro\n    });\n  } else {\n    faro.internalLogger.debug('Skipping registering public Faro instance in the global scope');\n  }\n}","map":{"version":3,"names":["globalObject","setFaroOnGlobalObject","faro","config","preventGlobalExposure","internalLogger","debug","globalObjectKey","warn","Object","defineProperty","configurable","writable","value"],"sources":["/home/egor/node_modules/@grafana/faro-core/src/sdk/faroGlobalObject.ts"],"sourcesContent":["import { globalObject } from '../globalObject';\n\nimport type { Faro } from './types';\n\nexport function setFaroOnGlobalObject(faro: Faro): void {\n  if (!faro.config.preventGlobalExposure) {\n    faro.internalLogger.debug(\n      `Registering public faro reference in the global scope using \"${faro.config.globalObjectKey}\" key`\n    );\n\n    if (faro.config.globalObjectKey in globalObject) {\n      faro.internalLogger.warn(\n        `Skipping global registration due to key \"${faro.config.globalObjectKey}\" being used already. Please set \"globalObjectKey\" to something else or set \"preventGlobalExposure\" to \"true\"`\n      );\n\n      return;\n    }\n\n    Object.defineProperty(globalObject, faro.config.globalObjectKey, {\n      configurable: false,\n      writable: false,\n      value: faro,\n    });\n  } else {\n    faro.internalLogger.debug('Skipping registering public Faro instance in the global scope');\n  }\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAI9C,OAAM,SAAUC,qBAAqBA,CAACC,IAAU;EAC9C,IAAI,CAACA,IAAI,CAACC,MAAM,CAACC,qBAAqB,EAAE;IACtCF,IAAI,CAACG,cAAc,CAACC,KAAK,CACvB,gEAAgEJ,IAAI,CAACC,MAAM,CAACI,eAAe,OAAO,CACnG;IAED,IAAIL,IAAI,CAACC,MAAM,CAACI,eAAe,IAAIP,YAAY,EAAE;MAC/CE,IAAI,CAACG,cAAc,CAACG,IAAI,CACtB,4CAA4CN,IAAI,CAACC,MAAM,CAACI,eAAe,+GAA+G,CACvL;MAED;;IAGFE,MAAM,CAACC,cAAc,CAACV,YAAY,EAAEE,IAAI,CAACC,MAAM,CAACI,eAAe,EAAE;MAC/DI,YAAY,EAAE,KAAK;MACnBC,QAAQ,EAAE,KAAK;MACfC,KAAK,EAAEX;KACR,CAAC;GACH,MAAM;IACLA,IAAI,CAACG,cAAc,CAACC,KAAK,CAAC,+DAA+D,CAAC;;AAE9F"},"metadata":{},"sourceType":"module","externalDependencies":[]}