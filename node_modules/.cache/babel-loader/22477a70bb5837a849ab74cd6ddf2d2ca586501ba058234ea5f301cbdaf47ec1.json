{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExactPredicate, PatternPredicate } from './Predicate';\nvar InstrumentSelector = /** @class */function () {\n  function InstrumentSelector(criteria) {\n    var _a;\n    this._nameFilter = new PatternPredicate((_a = criteria === null || criteria === void 0 ? void 0 : criteria.name) !== null && _a !== void 0 ? _a : '*');\n    this._type = criteria === null || criteria === void 0 ? void 0 : criteria.type;\n    this._unitFilter = new ExactPredicate(criteria === null || criteria === void 0 ? void 0 : criteria.unit);\n  }\n  InstrumentSelector.prototype.getType = function () {\n    return this._type;\n  };\n  InstrumentSelector.prototype.getNameFilter = function () {\n    return this._nameFilter;\n  };\n  InstrumentSelector.prototype.getUnitFilter = function () {\n    return this._unitFilter;\n  };\n  return InstrumentSelector;\n}();\nexport { InstrumentSelector };","map":{"version":3,"names":["ExactPredicate","PatternPredicate","InstrumentSelector","criteria","_nameFilter","_a","name","_type","type","_unitFilter","unit","prototype","getType","getNameFilter","getUnitFilter"],"sources":["/home/egor/node_modules/@opentelemetry/sdk-metrics/src/view/InstrumentSelector.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentType } from '../InstrumentDescriptor';\nimport { ExactPredicate, PatternPredicate, Predicate } from './Predicate';\n\nexport interface InstrumentSelectorCriteria {\n  name?: string;\n  type?: InstrumentType;\n  unit?: string;\n}\n\nexport class InstrumentSelector {\n  private _nameFilter: Predicate;\n  private _type?: InstrumentType;\n  private _unitFilter: Predicate;\n\n  constructor(criteria?: InstrumentSelectorCriteria) {\n    this._nameFilter = new PatternPredicate(criteria?.name ?? '*');\n    this._type = criteria?.type;\n    this._unitFilter = new ExactPredicate(criteria?.unit);\n  }\n\n  getType() {\n    return this._type;\n  }\n\n  getNameFilter() {\n    return this._nameFilter;\n  }\n\n  getUnitFilter() {\n    return this._unitFilter;\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAiBA,SAASA,cAAc,EAAEC,gBAAgB,QAAmB,aAAa;AAQzE,IAAAC,kBAAA;EAKE,SAAAA,mBAAYC,QAAqC;;IAC/C,IAAI,CAACC,WAAW,GAAG,IAAIH,gBAAgB,CAAC,CAAAI,EAAA,GAAAF,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,IAAI,cAAAD,EAAA,cAAAA,EAAA,GAAI,GAAG,CAAC;IAC9D,IAAI,CAACE,KAAK,GAAGJ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK,IAAI;IAC3B,IAAI,CAACC,WAAW,GAAG,IAAIT,cAAc,CAACG,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEO,IAAI,CAAC;EACvD;EAEAR,kBAAA,CAAAS,SAAA,CAAAC,OAAO,GAAP;IACE,OAAO,IAAI,CAACL,KAAK;EACnB,CAAC;EAEDL,kBAAA,CAAAS,SAAA,CAAAE,aAAa,GAAb;IACE,OAAO,IAAI,CAACT,WAAW;EACzB,CAAC;EAEDF,kBAAA,CAAAS,SAAA,CAAAG,aAAa,GAAb;IACE,OAAO,IAAI,CAACL,WAAW;EACzB,CAAC;EACH,OAAAP,kBAAC;AAAD,CAAC,CAtBD"},"metadata":{},"sourceType":"module","externalDependencies":[]}