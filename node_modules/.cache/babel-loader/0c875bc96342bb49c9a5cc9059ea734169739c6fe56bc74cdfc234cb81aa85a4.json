{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * Error that is thrown on timeouts.\n */\nvar TimeoutError = /** @class */function (_super) {\n  __extends(TimeoutError, _super);\n  function TimeoutError(message) {\n    var _this = _super.call(this, message) || this;\n    // manually adjust prototype to retain `instanceof` functionality when targeting ES5, see:\n    // https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(_this, TimeoutError.prototype);\n    return _this;\n  }\n  return TimeoutError;\n}(Error);\nexport { TimeoutError };\n/**\n * Adds a timeout to a promise and rejects if the specified timeout has elapsed. Also rejects if the specified promise\n * rejects, and resolves if the specified promise resolves.\n *\n * <p> NOTE: this operation will continue even after it throws a {@link TimeoutError}.\n *\n * @param promise promise to use with timeout.\n * @param timeout the timeout in milliseconds until the returned promise is rejected.\n */\nexport function callWithTimeout(promise, timeout) {\n  var timeoutHandle;\n  var timeoutPromise = new Promise(function timeoutFunction(_resolve, reject) {\n    timeoutHandle = setTimeout(function timeoutHandler() {\n      reject(new TimeoutError('Operation timed out.'));\n    }, timeout);\n  });\n  return Promise.race([promise, timeoutPromise]).then(function (result) {\n    clearTimeout(timeoutHandle);\n    return result;\n  }, function (reason) {\n    clearTimeout(timeoutHandle);\n    throw reason;\n  });\n}","map":{"version":3,"names":["TimeoutError","_super","__extends","message","_this","call","Object","setPrototypeOf","prototype","Error","callWithTimeout","promise","timeout","timeoutHandle","timeoutPromise","Promise","timeoutFunction","_resolve","reject","setTimeout","timeoutHandler","race","then","result","clearTimeout","reason"],"sources":["/home/egor/node_modules/@opentelemetry/core/src/utils/timeout.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error that is thrown on timeouts.\n */\nexport class TimeoutError extends Error {\n  constructor(message?: string) {\n    super(message);\n\n    // manually adjust prototype to retain `instanceof` functionality when targeting ES5, see:\n    // https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, TimeoutError.prototype);\n  }\n}\n\n/**\n * Adds a timeout to a promise and rejects if the specified timeout has elapsed. Also rejects if the specified promise\n * rejects, and resolves if the specified promise resolves.\n *\n * <p> NOTE: this operation will continue even after it throws a {@link TimeoutError}.\n *\n * @param promise promise to use with timeout.\n * @param timeout the timeout in milliseconds until the returned promise is rejected.\n */\nexport function callWithTimeout<T>(\n  promise: Promise<T>,\n  timeout: number\n): Promise<T> {\n  let timeoutHandle: ReturnType<typeof setTimeout>;\n\n  const timeoutPromise = new Promise<never>(function timeoutFunction(\n    _resolve,\n    reject\n  ) {\n    timeoutHandle = setTimeout(function timeoutHandler() {\n      reject(new TimeoutError('Operation timed out.'));\n    }, timeout);\n  });\n\n  return Promise.race([promise, timeoutPromise]).then(\n    result => {\n      clearTimeout(timeoutHandle);\n      return result;\n    },\n    reason => {\n      clearTimeout(timeoutHandle);\n      throw reason;\n    }\n  );\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;;;AAGA,IAAAA,YAAA,0BAAAC,MAAA;EAAkCC,SAAA,CAAAF,YAAA,EAAAC,MAAA;EAChC,SAAAD,aAAYG,OAAgB;IAA5B,IAAAC,KAAA,GACEH,MAAA,CAAAI,IAAA,OAAMF,OAAO,CAAC;IAEd;IACA;IACAG,MAAM,CAACC,cAAc,CAACH,KAAI,EAAEJ,YAAY,CAACQ,SAAS,CAAC;;EACrD;EACF,OAAAR,YAAC;AAAD,CAAC,CARiCS,KAAK;;AAUvC;;;;;;;;;AASA,OAAM,SAAUC,eAAeA,CAC7BC,OAAmB,EACnBC,OAAe;EAEf,IAAIC,aAA4C;EAEhD,IAAMC,cAAc,GAAG,IAAIC,OAAO,CAAQ,SAASC,eAAeA,CAChEC,QAAQ,EACRC,MAAM;IAENL,aAAa,GAAGM,UAAU,CAAC,SAASC,cAAcA,CAAA;MAChDF,MAAM,CAAC,IAAIlB,YAAY,CAAC,sBAAsB,CAAC,CAAC;IAClD,CAAC,EAAEY,OAAO,CAAC;EACb,CAAC,CAAC;EAEF,OAAOG,OAAO,CAACM,IAAI,CAAC,CAACV,OAAO,EAAEG,cAAc,CAAC,CAAC,CAACQ,IAAI,CACjD,UAAAC,MAAM;IACJC,YAAY,CAACX,aAAa,CAAC;IAC3B,OAAOU,MAAM;EACf,CAAC,EACD,UAAAE,MAAM;IACJD,YAAY,CAACX,aAAa,CAAC;IAC3B,MAAMY,MAAM;EACd,CAAC,CACF;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}