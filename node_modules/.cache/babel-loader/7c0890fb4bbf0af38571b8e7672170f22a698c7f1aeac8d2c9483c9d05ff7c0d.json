{"ast":null,"code":"import { ExportResultCode } from '@opentelemetry/core';\nimport { createExportTraceServiceRequest } from '@opentelemetry/otlp-transformer';\nexport class FaroTraceExporter {\n  constructor(config) {\n    this.config = config;\n  }\n  export(spans, resultCallback) {\n    const traceEvent = createExportTraceServiceRequest(spans, {\n      useHex: true,\n      useLongBits: false\n    });\n    this.config.api.pushTraces(traceEvent);\n    resultCallback({\n      code: ExportResultCode.SUCCESS\n    });\n  }\n  shutdown() {\n    return Promise.resolve(undefined);\n  }\n}","map":{"version":3,"names":["ExportResultCode","createExportTraceServiceRequest","FaroTraceExporter","constructor","config","export","spans","resultCallback","traceEvent","useHex","useLongBits","api","pushTraces","code","SUCCESS","shutdown","Promise","resolve","undefined"],"sources":["/home/egor/node_modules/@grafana/faro-web-tracing/src/faroTraceExporter.ts"],"sourcesContent":["import { ExportResultCode } from '@opentelemetry/core';\nimport type { ExportResult } from '@opentelemetry/core';\nimport { createExportTraceServiceRequest } from '@opentelemetry/otlp-transformer';\nimport type { ReadableSpan, SpanExporter } from '@opentelemetry/sdk-trace-web';\n\nimport type { FaroTraceExporterConfig } from './types';\n\nexport class FaroTraceExporter implements SpanExporter {\n  constructor(private config: FaroTraceExporterConfig) {}\n\n  export(spans: ReadableSpan[], resultCallback: (result: ExportResult) => void): void {\n    const traceEvent = createExportTraceServiceRequest(spans, { useHex: true, useLongBits: false });\n\n    this.config.api.pushTraces(traceEvent);\n\n    resultCallback({ code: ExportResultCode.SUCCESS });\n  }\n\n  shutdown(): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,qBAAqB;AAEtD,SAASC,+BAA+B,QAAQ,iCAAiC;AAKjF,OAAM,MAAOC,iBAAiB;EAC5BC,YAAoBC,MAA+B;IAA/B,KAAAA,MAAM,GAANA,MAAM;EAA4B;EAEtDC,MAAMA,CAACC,KAAqB,EAAEC,cAA8C;IAC1E,MAAMC,UAAU,GAAGP,+BAA+B,CAACK,KAAK,EAAE;MAAEG,MAAM,EAAE,IAAI;MAAEC,WAAW,EAAE;IAAK,CAAE,CAAC;IAE/F,IAAI,CAACN,MAAM,CAACO,GAAG,CAACC,UAAU,CAACJ,UAAU,CAAC;IAEtCD,cAAc,CAAC;MAAEM,IAAI,EAAEb,gBAAgB,CAACc;IAAO,CAAE,CAAC;EACpD;EAEAC,QAAQA,CAAA;IACN,OAAOC,OAAO,CAACC,OAAO,CAACC,SAAS,CAAC;EACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}