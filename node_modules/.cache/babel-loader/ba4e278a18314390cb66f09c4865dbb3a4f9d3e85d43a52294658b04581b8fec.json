{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Resource } from '../Resource';\nvar NoopDetectorSync = /** @class */function () {\n  function NoopDetectorSync() {}\n  NoopDetectorSync.prototype.detect = function () {\n    return new Resource({});\n  };\n  return NoopDetectorSync;\n}();\nexport { NoopDetectorSync };\nexport var noopDetectorSync = new NoopDetectorSync();","map":{"version":3,"names":["Resource","NoopDetectorSync","prototype","detect","noopDetectorSync"],"sources":["/home/egor/node_modules/@opentelemetry/resources/src/detectors/NoopDetectorSync.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Resource } from '../Resource';\nimport { DetectorSync } from '../types';\nimport { IResource } from '../IResource';\n\nexport class NoopDetectorSync implements DetectorSync {\n  detect(): IResource {\n    return new Resource({});\n  }\n}\n\nexport const noopDetectorSync = new NoopDetectorSync();\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,SAASA,QAAQ,QAAQ,aAAa;AAItC,IAAAC,gBAAA;EAAA,SAAAA,iBAAA,GAIA;EAHEA,gBAAA,CAAAC,SAAA,CAAAC,MAAM,GAAN;IACE,OAAO,IAAIH,QAAQ,CAAC,EAAE,CAAC;EACzB,CAAC;EACH,OAAAC,gBAAC;AAAD,CAAC,CAJD;;AAMA,OAAO,IAAMG,gBAAgB,GAAG,IAAIH,gBAAgB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}