{"ast":null,"code":"import { genShortID } from '@grafana/faro-core';\nimport { getItem, setItem, webStorageType } from '../../utils';\nimport { NAVIGATION_ENTRY, NAVIGATION_ID_STORAGE_KEY } from './performanceConstants';\nimport { calculateFaroNavigationTiming, entryUrlIsIgnored } from './performanceUtils';\nexport function getNavigationTimings(pushEvent, ignoredUrls) {\n  let faroNavigationEntryResolve;\n  const faroNavigationEntryPromise = new Promise(resolve => {\n    faroNavigationEntryResolve = resolve;\n  });\n  const observer = new PerformanceObserver(observedEntries => {\n    var _a;\n    const [navigationEntryRaw] = observedEntries.getEntries();\n    if (navigationEntryRaw == null || entryUrlIsIgnored(ignoredUrls, navigationEntryRaw.name)) {\n      return;\n    }\n    const faroPreviousNavigationId = (_a = getItem(NAVIGATION_ID_STORAGE_KEY, webStorageType.session)) !== null && _a !== void 0 ? _a : 'unknown';\n    const faroNavigationEntry = Object.assign(Object.assign({}, calculateFaroNavigationTiming(navigationEntryRaw.toJSON())), {\n      faroNavigationId: genShortID(),\n      faroPreviousNavigationId\n    });\n    setItem(NAVIGATION_ID_STORAGE_KEY, faroNavigationEntry.faroNavigationId, webStorageType.session);\n    pushEvent('faro.performance.navigation', faroNavigationEntry);\n    faroNavigationEntryResolve(faroNavigationEntry);\n  });\n  observer.observe({\n    type: NAVIGATION_ENTRY,\n    buffered: true\n  });\n  return faroNavigationEntryPromise;\n}","map":{"version":3,"names":["genShortID","getItem","setItem","webStorageType","NAVIGATION_ENTRY","NAVIGATION_ID_STORAGE_KEY","calculateFaroNavigationTiming","entryUrlIsIgnored","getNavigationTimings","pushEvent","ignoredUrls","faroNavigationEntryResolve","faroNavigationEntryPromise","Promise","resolve","observer","PerformanceObserver","observedEntries","navigationEntryRaw","getEntries","name","faroPreviousNavigationId","_a","session","faroNavigationEntry","Object","assign","toJSON","faroNavigationId","observe","type","buffered"],"sources":["/home/egor/node_modules/@grafana/faro-web-sdk/src/instrumentations/performance/navigation.ts"],"sourcesContent":["import { genShortID } from '@grafana/faro-core';\nimport type { EventsAPI } from '@grafana/faro-core';\n\nimport { getItem, setItem, webStorageType } from '../../utils';\n\nimport { NAVIGATION_ENTRY, NAVIGATION_ID_STORAGE_KEY } from './performanceConstants';\nimport { calculateFaroNavigationTiming, entryUrlIsIgnored } from './performanceUtils';\nimport type { FaroNavigationItem } from './types';\n\nexport function getNavigationTimings(\n  pushEvent: EventsAPI['pushEvent'],\n  ignoredUrls: Array<string | RegExp>\n): Promise<FaroNavigationItem> {\n  let faroNavigationEntryResolve: (value: FaroNavigationItem) => void;\n  const faroNavigationEntryPromise = new Promise<FaroNavigationItem>((resolve) => {\n    faroNavigationEntryResolve = resolve;\n  });\n\n  const observer = new PerformanceObserver((observedEntries) => {\n    const [navigationEntryRaw] = observedEntries.getEntries();\n\n    if (navigationEntryRaw == null || entryUrlIsIgnored(ignoredUrls, navigationEntryRaw.name)) {\n      return;\n    }\n\n    const faroPreviousNavigationId = getItem(NAVIGATION_ID_STORAGE_KEY, webStorageType.session) ?? 'unknown';\n\n    const faroNavigationEntry: FaroNavigationItem = {\n      ...calculateFaroNavigationTiming(navigationEntryRaw.toJSON()),\n      faroNavigationId: genShortID(),\n      faroPreviousNavigationId,\n    };\n\n    setItem(NAVIGATION_ID_STORAGE_KEY, faroNavigationEntry.faroNavigationId, webStorageType.session);\n\n    pushEvent('faro.performance.navigation', faroNavigationEntry);\n\n    faroNavigationEntryResolve(faroNavigationEntry);\n  });\n\n  observer.observe({\n    type: NAVIGATION_ENTRY,\n    buffered: true,\n  });\n\n  return faroNavigationEntryPromise;\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,oBAAoB;AAG/C,SAASC,OAAO,EAAEC,OAAO,EAAEC,cAAc,QAAQ,aAAa;AAE9D,SAASC,gBAAgB,EAAEC,yBAAyB,QAAQ,wBAAwB;AACpF,SAASC,6BAA6B,EAAEC,iBAAiB,QAAQ,oBAAoB;AAGrF,OAAM,SAAUC,oBAAoBA,CAClCC,SAAiC,EACjCC,WAAmC;EAEnC,IAAIC,0BAA+D;EACnE,MAAMC,0BAA0B,GAAG,IAAIC,OAAO,CAAsBC,OAAO,IAAI;IAC7EH,0BAA0B,GAAGG,OAAO;EACtC,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAG,IAAIC,mBAAmB,CAAEC,eAAe,IAAI;;IAC3D,MAAM,CAACC,kBAAkB,CAAC,GAAGD,eAAe,CAACE,UAAU,EAAE;IAEzD,IAAID,kBAAkB,IAAI,IAAI,IAAIX,iBAAiB,CAACG,WAAW,EAAEQ,kBAAkB,CAACE,IAAI,CAAC,EAAE;MACzF;;IAGF,MAAMC,wBAAwB,GAAG,CAAAC,EAAA,GAAArB,OAAO,CAACI,yBAAyB,EAAEF,cAAc,CAACoB,OAAO,CAAC,cAAAD,EAAA,cAAAA,EAAA,GAAI,SAAS;IAExG,MAAME,mBAAmB,GAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACpBpB,6BAA6B,CAACY,kBAAkB,CAACS,MAAM,EAAE,CAAC;MAC7DC,gBAAgB,EAAE5B,UAAU,EAAE;MAC9BqB;IAAwB,EACzB;IAEDnB,OAAO,CAACG,yBAAyB,EAAEmB,mBAAmB,CAACI,gBAAgB,EAAEzB,cAAc,CAACoB,OAAO,CAAC;IAEhGd,SAAS,CAAC,6BAA6B,EAAEe,mBAAmB,CAAC;IAE7Db,0BAA0B,CAACa,mBAAmB,CAAC;EACjD,CAAC,CAAC;EAEFT,QAAQ,CAACc,OAAO,CAAC;IACfC,IAAI,EAAE1B,gBAAgB;IACtB2B,QAAQ,EAAE;GACX,CAAC;EAEF,OAAOnB,0BAA0B;AACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}