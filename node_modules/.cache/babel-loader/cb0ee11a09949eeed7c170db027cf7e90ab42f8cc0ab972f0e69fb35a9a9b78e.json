{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { BaseInstrumentation, VERSION } from '@grafana/faro-core';\nimport { getNavigationTimings } from './navigation';\nimport { onDocumentReady, performanceObserverSupported } from './performanceUtils';\nimport { observeResourceTimings } from './resource';\nexport class PerformanceInstrumentation extends BaseInstrumentation {\n  constructor() {\n    super(...arguments);\n    this.name = '@grafana/faro-web-sdk:instrumentation-performance';\n    this.version = VERSION;\n  }\n  initialize() {\n    if (!performanceObserverSupported()) {\n      this.logDebug('performance observer not supported. Disable performance instrumentation.');\n      return;\n    }\n    onDocumentReady(() => __awaiter(this, void 0, void 0, function* () {\n      const pushEvent = this.api.pushEvent;\n      const ignoredUrls = this.getIgnoreUrls();\n      const {\n        faroNavigationId\n      } = yield getNavigationTimings(pushEvent, ignoredUrls);\n      if (faroNavigationId != null) {\n        observeResourceTimings(faroNavigationId, pushEvent, ignoredUrls);\n      }\n    }));\n  }\n  getIgnoreUrls() {\n    var _a;\n    return (_a = this.transports.transports) === null || _a === void 0 ? void 0 : _a.flatMap(transport => transport.getIgnoreUrls());\n  }\n}","map":{"version":3,"names":["BaseInstrumentation","VERSION","getNavigationTimings","onDocumentReady","performanceObserverSupported","observeResourceTimings","PerformanceInstrumentation","constructor","name","version","initialize","logDebug","__awaiter","pushEvent","api","ignoredUrls","getIgnoreUrls","faroNavigationId","_a","transports","flatMap","transport"],"sources":["/home/egor/node_modules/@grafana/faro-web-sdk/src/instrumentations/performance/instrumentation.ts"],"sourcesContent":["import { BaseInstrumentation, VERSION } from '@grafana/faro-core';\n\nimport { getNavigationTimings } from './navigation';\nimport { onDocumentReady, performanceObserverSupported } from './performanceUtils';\nimport { observeResourceTimings } from './resource';\n\nexport class PerformanceInstrumentation extends BaseInstrumentation {\n  readonly name = '@grafana/faro-web-sdk:instrumentation-performance';\n  readonly version = VERSION;\n\n  initialize() {\n    if (!performanceObserverSupported()) {\n      this.logDebug('performance observer not supported. Disable performance instrumentation.');\n      return;\n    }\n\n    onDocumentReady(async () => {\n      const pushEvent = this.api.pushEvent;\n      const ignoredUrls = this.getIgnoreUrls();\n\n      const { faroNavigationId } = await getNavigationTimings(pushEvent, ignoredUrls);\n\n      if (faroNavigationId != null) {\n        observeResourceTimings(faroNavigationId, pushEvent, ignoredUrls);\n      }\n    });\n  }\n\n  private getIgnoreUrls(): Array<string | RegExp> {\n    return this.transports.transports?.flatMap((transport) => transport.getIgnoreUrls());\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,mBAAmB,EAAEC,OAAO,QAAQ,oBAAoB;AAEjE,SAASC,oBAAoB,QAAQ,cAAc;AACnD,SAASC,eAAe,EAAEC,4BAA4B,QAAQ,oBAAoB;AAClF,SAASC,sBAAsB,QAAQ,YAAY;AAEnD,OAAM,MAAOC,0BAA2B,SAAQN,mBAAmB;EAAnEO,YAAA;;IACW,KAAAC,IAAI,GAAG,mDAAmD;IAC1D,KAAAC,OAAO,GAAGR,OAAO;EAuB5B;EArBES,UAAUA,CAAA;IACR,IAAI,CAACN,4BAA4B,EAAE,EAAE;MACnC,IAAI,CAACO,QAAQ,CAAC,0EAA0E,CAAC;MACzF;;IAGFR,eAAe,CAAC,MAAWS,SAAA;MACzB,MAAMC,SAAS,GAAG,IAAI,CAACC,GAAG,CAACD,SAAS;MACpC,MAAME,WAAW,GAAG,IAAI,CAACC,aAAa,EAAE;MAExC,MAAM;QAAEC;MAAgB,CAAE,GAAG,MAAMf,oBAAoB,CAACW,SAAS,EAAEE,WAAW,CAAC;MAE/E,IAAIE,gBAAgB,IAAI,IAAI,EAAE;QAC5BZ,sBAAsB,CAACY,gBAAgB,EAAEJ,SAAS,EAAEE,WAAW,CAAC;;IAEpE,CAAC,EAAC;EACJ;EAEQC,aAAaA,CAAA;;IACnB,OAAO,CAAAE,EAAA,OAAI,CAACC,UAAU,CAACA,UAAU,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,OAAO,CAAEC,SAAS,IAAKA,SAAS,CAACL,aAAa,EAAE,CAAC;EACtF"},"metadata":{},"sourceType":"module","externalDependencies":[]}