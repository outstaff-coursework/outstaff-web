{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { BaseTransport, createPromiseBuffer, getTransportBody, noop, VERSION } from '@grafana/faro-core';\nconst DEFAULT_BUFFER_SIZE = 30;\nconst DEFAULT_CONCURRENCY = 5; // chrome supports 10 total, firefox 17\nconst DEFAULT_RATE_LIMIT_BACKOFF_MS = 5000;\nconst BEACON_BODY_SIZE_LIMIT = 60000;\nconst TOO_MANY_REQUESTS = 429;\nexport class FetchTransport extends BaseTransport {\n  constructor(options) {\n    var _a, _b, _c, _d;\n    super();\n    this.options = options;\n    this.name = '@grafana/faro-web-sdk:transport-fetch';\n    this.version = VERSION;\n    this.disabledUntil = new Date();\n    this.rateLimitBackoffMs = (_a = options.defaultRateLimitBackoffMs) !== null && _a !== void 0 ? _a : DEFAULT_RATE_LIMIT_BACKOFF_MS;\n    this.getNow = (_b = options.getNow) !== null && _b !== void 0 ? _b : () => Date.now();\n    this.promiseBuffer = createPromiseBuffer({\n      size: (_c = options.bufferSize) !== null && _c !== void 0 ? _c : DEFAULT_BUFFER_SIZE,\n      concurrency: (_d = options.concurrency) !== null && _d !== void 0 ? _d : DEFAULT_CONCURRENCY\n    });\n  }\n  send(items) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        if (this.disabledUntil > new Date(this.getNow())) {\n          this.logWarn(`Dropping transport item due to too many requests. Backoff until ${this.disabledUntil}`);\n          return Promise.resolve();\n        }\n        yield this.promiseBuffer.add(() => {\n          const body = JSON.stringify(getTransportBody(items));\n          const {\n            url,\n            requestOptions,\n            apiKey\n          } = this.options;\n          const _a = requestOptions !== null && requestOptions !== void 0 ? requestOptions : {},\n            {\n              headers\n            } = _a,\n            restOfRequestOptions = __rest(_a, [\"headers\"]);\n          let sessionId;\n          const sessionMeta = this.metas.value.session;\n          if (sessionMeta != null) {\n            sessionId = sessionMeta.id;\n          }\n          return fetch(url, Object.assign({\n            method: 'POST',\n            headers: Object.assign(Object.assign(Object.assign({\n              'Content-Type': 'application/json'\n            }, headers !== null && headers !== void 0 ? headers : {}), apiKey ? {\n              'x-api-key': apiKey\n            } : {}), sessionId ? {\n              'x-faro-session-id': sessionId\n            } : {}),\n            body,\n            keepalive: body.length <= BEACON_BODY_SIZE_LIMIT\n          }, restOfRequestOptions !== null && restOfRequestOptions !== void 0 ? restOfRequestOptions : {})).then(response => {\n            if (response.status === TOO_MANY_REQUESTS) {\n              this.disabledUntil = this.getRetryAfterDate(response);\n              this.logWarn(`Too many requests, backing off until ${this.disabledUntil}`);\n            }\n            // read the body so the connection can be closed\n            response.text().catch(noop);\n            return response;\n          }).catch(err => {\n            this.logError('Failed sending payload to the receiver\\n', JSON.parse(body), err);\n          });\n        });\n      } catch (err) {\n        this.logError(err);\n      }\n    });\n  }\n  getIgnoreUrls() {\n    return [this.options.url];\n  }\n  isBatched() {\n    return true;\n  }\n  getRetryAfterDate(response) {\n    const now = this.getNow();\n    const retryAfterHeader = response.headers.get('Retry-After');\n    if (retryAfterHeader) {\n      const delay = Number(retryAfterHeader);\n      if (!isNaN(delay)) {\n        return new Date(delay * 1000 + now);\n      }\n      const date = Date.parse(retryAfterHeader);\n      if (!isNaN(date)) {\n        return new Date(date);\n      }\n    }\n    return new Date(now + this.rateLimitBackoffMs);\n  }\n}","map":{"version":3,"names":["BaseTransport","createPromiseBuffer","getTransportBody","noop","VERSION","DEFAULT_BUFFER_SIZE","DEFAULT_CONCURRENCY","DEFAULT_RATE_LIMIT_BACKOFF_MS","BEACON_BODY_SIZE_LIMIT","TOO_MANY_REQUESTS","FetchTransport","constructor","options","name","version","disabledUntil","Date","rateLimitBackoffMs","_a","defaultRateLimitBackoffMs","getNow","_b","now","promiseBuffer","size","_c","bufferSize","concurrency","_d","send","items","logWarn","Promise","resolve","add","body","JSON","stringify","url","requestOptions","apiKey","headers","restOfRequestOptions","__rest","sessionId","sessionMeta","metas","value","session","id","fetch","Object","assign","method","keepalive","length","then","response","status","getRetryAfterDate","text","catch","err","logError","parse","getIgnoreUrls","isBatched","retryAfterHeader","get","delay","Number","isNaN","date"],"sources":["/home/egor/node_modules/@grafana/faro-web-sdk/src/transports/fetch/transport.ts"],"sourcesContent":["import { BaseTransport, createPromiseBuffer, getTransportBody, noop, PromiseBuffer, VERSION } from '@grafana/faro-core';\nimport type { TransportItem } from '@grafana/faro-core';\n\nimport type { FetchTransportOptions } from './types';\n\nconst DEFAULT_BUFFER_SIZE = 30;\nconst DEFAULT_CONCURRENCY = 5; // chrome supports 10 total, firefox 17\nconst DEFAULT_RATE_LIMIT_BACKOFF_MS = 5000;\n\nconst BEACON_BODY_SIZE_LIMIT = 60000;\nconst TOO_MANY_REQUESTS = 429;\n\nexport class FetchTransport extends BaseTransport {\n  readonly name = '@grafana/faro-web-sdk:transport-fetch';\n  readonly version = VERSION;\n\n  promiseBuffer: PromiseBuffer<Response | void>;\n\n  private readonly rateLimitBackoffMs: number;\n  private readonly getNow: () => number;\n  private disabledUntil: Date = new Date();\n\n  constructor(private options: FetchTransportOptions) {\n    super();\n\n    this.rateLimitBackoffMs = options.defaultRateLimitBackoffMs ?? DEFAULT_RATE_LIMIT_BACKOFF_MS;\n    this.getNow = options.getNow ?? (() => Date.now());\n\n    this.promiseBuffer = createPromiseBuffer({\n      size: options.bufferSize ?? DEFAULT_BUFFER_SIZE,\n      concurrency: options.concurrency ?? DEFAULT_CONCURRENCY,\n    });\n  }\n\n  async send(items: TransportItem[]): Promise<void> {\n    try {\n      if (this.disabledUntil > new Date(this.getNow())) {\n        this.logWarn(`Dropping transport item due to too many requests. Backoff until ${this.disabledUntil}`);\n\n        return Promise.resolve();\n      }\n\n      await this.promiseBuffer.add(() => {\n        const body = JSON.stringify(getTransportBody(items));\n\n        const { url, requestOptions, apiKey } = this.options;\n\n        const { headers, ...restOfRequestOptions } = requestOptions ?? {};\n\n        let sessionId;\n        const sessionMeta = this.metas.value.session;\n        if (sessionMeta != null) {\n          sessionId = sessionMeta.id;\n        }\n\n        return fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            ...(headers ?? {}),\n            ...(apiKey ? { 'x-api-key': apiKey } : {}),\n            ...(sessionId ? { 'x-faro-session-id': sessionId } : {}),\n          },\n          body,\n          keepalive: body.length <= BEACON_BODY_SIZE_LIMIT,\n          ...(restOfRequestOptions ?? {}),\n        })\n          .then((response) => {\n            if (response.status === TOO_MANY_REQUESTS) {\n              this.disabledUntil = this.getRetryAfterDate(response);\n              this.logWarn(`Too many requests, backing off until ${this.disabledUntil}`);\n            }\n            // read the body so the connection can be closed\n            response.text().catch(noop);\n\n            return response;\n          })\n          .catch((err) => {\n            this.logError('Failed sending payload to the receiver\\n', JSON.parse(body), err);\n          });\n      });\n    } catch (err) {\n      this.logError(err);\n    }\n  }\n\n  override getIgnoreUrls(): Array<string | RegExp> {\n    return [this.options.url];\n  }\n\n  override isBatched(): boolean {\n    return true;\n  }\n\n  private getRetryAfterDate(response: Response): Date {\n    const now = this.getNow();\n    const retryAfterHeader = response.headers.get('Retry-After');\n\n    if (retryAfterHeader) {\n      const delay = Number(retryAfterHeader);\n\n      if (!isNaN(delay)) {\n        return new Date(delay * 1000 + now);\n      }\n\n      const date = Date.parse(retryAfterHeader);\n\n      if (!isNaN(date)) {\n        return new Date(date);\n      }\n    }\n\n    return new Date(now + this.rateLimitBackoffMs);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}