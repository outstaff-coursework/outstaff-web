{"ast":null,"code":"import { toResourceMetrics } from './internal';\nexport function createExportMetricsServiceRequest(resourceMetrics, options) {\n  return {\n    resourceMetrics: resourceMetrics.map(function (metrics) {\n      return toResourceMetrics(metrics, options);\n    })\n  };\n}","map":{"version":3,"names":["toResourceMetrics","createExportMetricsServiceRequest","resourceMetrics","options","map","metrics"],"sources":["/home/egor/node_modules/@opentelemetry/otlp-transformer/src/metrics/index.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { ResourceMetrics } from '@opentelemetry/sdk-metrics';\nimport type { IExportMetricsServiceRequest } from './types';\nimport type { OtlpEncodingOptions } from '../common/types';\nimport { toResourceMetrics } from './internal';\n\nexport function createExportMetricsServiceRequest(\n  resourceMetrics: ResourceMetrics[],\n  options?: OtlpEncodingOptions\n): IExportMetricsServiceRequest {\n  return {\n    resourceMetrics: resourceMetrics.map(metrics =>\n      toResourceMetrics(metrics, options)\n    ),\n  };\n}\n"],"mappings":"AAkBA,SAASA,iBAAiB,QAAQ,YAAY;AAE9C,OAAM,SAAUC,iCAAiCA,CAC/CC,eAAkC,EAClCC,OAA6B;EAE7B,OAAO;IACLD,eAAe,EAAEA,eAAe,CAACE,GAAG,CAAC,UAAAC,OAAO;MAC1C,OAAAL,iBAAiB,CAACK,OAAO,EAAEF,OAAO,CAAC;IAAnC,CAAmC;GAEtC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}