{"ast":null,"code":"import { isFunction } from '../utils';\nexport function initializeMetas(_unpatchedConsole, internalLogger, _config) {\n  let items = [];\n  let listeners = [];\n  const getValue = () => items.reduce((acc, item) => Object.assign(acc, isFunction(item) ? item() : item), {});\n  const notifyListeners = () => {\n    if (listeners.length) {\n      const value = getValue();\n      listeners.forEach(listener => listener(value));\n    }\n  };\n  const add = (...newItems) => {\n    internalLogger.debug('Adding metas\\n', newItems);\n    items.push(...newItems);\n    notifyListeners();\n  };\n  const remove = (...itemsToRemove) => {\n    internalLogger.debug('Removing metas\\n', itemsToRemove);\n    items = items.filter(currentItem => !itemsToRemove.includes(currentItem));\n    notifyListeners();\n  };\n  const addListener = listener => {\n    internalLogger.debug('Adding metas listener\\n', listener);\n    listeners.push(listener);\n  };\n  const removeListener = listener => {\n    internalLogger.debug('Removing metas listener\\n', listener);\n    listeners = listeners.filter(currentListener => currentListener !== listener);\n  };\n  return {\n    add,\n    remove,\n    addListener,\n    removeListener,\n    get value() {\n      return getValue();\n    }\n  };\n}","map":{"version":3,"names":["isFunction","initializeMetas","_unpatchedConsole","internalLogger","_config","items","listeners","getValue","reduce","acc","item","Object","assign","notifyListeners","length","value","forEach","listener","add","newItems","debug","push","remove","itemsToRemove","filter","currentItem","includes","addListener","removeListener","currentListener"],"sources":["/home/egor/node_modules/@grafana/faro-core/src/metas/initialize.ts"],"sourcesContent":["import type { Config } from '../config';\nimport type { InternalLogger } from '../internalLogger';\nimport type { UnpatchedConsole } from '../unpatchedConsole';\nimport { isFunction } from '../utils';\n\nimport type { Meta, MetaItem, Metas, MetasListener } from './types';\n\nexport function initializeMetas(\n  _unpatchedConsole: UnpatchedConsole,\n  internalLogger: InternalLogger,\n  _config: Config\n): Metas {\n  let items: MetaItem[] = [];\n  let listeners: MetasListener[] = [];\n\n  const getValue = () => items.reduce<Meta>((acc, item) => Object.assign(acc, isFunction(item) ? item() : item), {});\n\n  const notifyListeners = () => {\n    if (listeners.length) {\n      const value = getValue();\n\n      listeners.forEach((listener) => listener(value));\n    }\n  };\n\n  const add: Metas['add'] = (...newItems) => {\n    internalLogger.debug('Adding metas\\n', newItems);\n\n    items.push(...newItems);\n\n    notifyListeners();\n  };\n\n  const remove: Metas['remove'] = (...itemsToRemove) => {\n    internalLogger.debug('Removing metas\\n', itemsToRemove);\n\n    items = items.filter((currentItem) => !itemsToRemove.includes(currentItem));\n\n    notifyListeners();\n  };\n\n  const addListener: Metas['addListener'] = (listener) => {\n    internalLogger.debug('Adding metas listener\\n', listener);\n\n    listeners.push(listener);\n  };\n\n  const removeListener: Metas['removeListener'] = (listener) => {\n    internalLogger.debug('Removing metas listener\\n', listener);\n\n    listeners = listeners.filter((currentListener) => currentListener !== listener);\n  };\n\n  return {\n    add,\n    remove,\n    addListener,\n    removeListener,\n    get value() {\n      return getValue();\n    },\n  };\n}\n"],"mappings":"AAGA,SAASA,UAAU,QAAQ,UAAU;AAIrC,OAAM,SAAUC,eAAeA,CAC7BC,iBAAmC,EACnCC,cAA8B,EAC9BC,OAAe;EAEf,IAAIC,KAAK,GAAe,EAAE;EAC1B,IAAIC,SAAS,GAAoB,EAAE;EAEnC,MAAMC,QAAQ,GAAGA,CAAA,KAAMF,KAAK,CAACG,MAAM,CAAO,CAACC,GAAG,EAAEC,IAAI,KAAKC,MAAM,CAACC,MAAM,CAACH,GAAG,EAAET,UAAU,CAACU,IAAI,CAAC,GAAGA,IAAI,EAAE,GAAGA,IAAI,CAAC,EAAE,EAAE,CAAC;EAElH,MAAMG,eAAe,GAAGA,CAAA,KAAK;IAC3B,IAAIP,SAAS,CAACQ,MAAM,EAAE;MACpB,MAAMC,KAAK,GAAGR,QAAQ,EAAE;MAExBD,SAAS,CAACU,OAAO,CAAEC,QAAQ,IAAKA,QAAQ,CAACF,KAAK,CAAC,CAAC;;EAEpD,CAAC;EAED,MAAMG,GAAG,GAAiBA,CAAC,GAAGC,QAAQ,KAAI;IACxChB,cAAc,CAACiB,KAAK,CAAC,gBAAgB,EAAED,QAAQ,CAAC;IAEhDd,KAAK,CAACgB,IAAI,CAAC,GAAGF,QAAQ,CAAC;IAEvBN,eAAe,EAAE;EACnB,CAAC;EAED,MAAMS,MAAM,GAAoBA,CAAC,GAAGC,aAAa,KAAI;IACnDpB,cAAc,CAACiB,KAAK,CAAC,kBAAkB,EAAEG,aAAa,CAAC;IAEvDlB,KAAK,GAAGA,KAAK,CAACmB,MAAM,CAAEC,WAAW,IAAK,CAACF,aAAa,CAACG,QAAQ,CAACD,WAAW,CAAC,CAAC;IAE3EZ,eAAe,EAAE;EACnB,CAAC;EAED,MAAMc,WAAW,GAA0BV,QAAQ,IAAI;IACrDd,cAAc,CAACiB,KAAK,CAAC,yBAAyB,EAAEH,QAAQ,CAAC;IAEzDX,SAAS,CAACe,IAAI,CAACJ,QAAQ,CAAC;EAC1B,CAAC;EAED,MAAMW,cAAc,GAA6BX,QAAQ,IAAI;IAC3Dd,cAAc,CAACiB,KAAK,CAAC,2BAA2B,EAAEH,QAAQ,CAAC;IAE3DX,SAAS,GAAGA,SAAS,CAACkB,MAAM,CAAEK,eAAe,IAAKA,eAAe,KAAKZ,QAAQ,CAAC;EACjF,CAAC;EAED,OAAO;IACLC,GAAG;IACHI,MAAM;IACNK,WAAW;IACXC,cAAc;IACd,IAAIb,KAAKA,CAAA;MACP,OAAOR,QAAQ,EAAE;IACnB;GACD;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}