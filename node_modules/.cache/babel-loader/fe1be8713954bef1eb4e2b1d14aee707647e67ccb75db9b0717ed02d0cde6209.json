{"ast":null,"code":"import { isArray, isObject, isTypeof } from './is';\n// This function was inspired by fast-deep-equal\n// fast-deep-equal has issues with Rollup and also it checks for some edge cases that we don't need\nexport function deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  // Using isTypeOf instead of isNumber as isNumber also checks against NaN\n  if (isTypeof(a, 'number') && isNaN(a)) {\n    return isTypeof(b, 'number') && isNaN(b);\n  }\n  const aIsArray = isArray(a);\n  const bIsArray = isArray(b);\n  if (aIsArray !== bIsArray) {\n    return false;\n  }\n  if (aIsArray && bIsArray) {\n    const length = a.length;\n    if (length !== b.length) {\n      return false;\n    }\n    for (let idx = length; idx-- !== 0;) {\n      if (!deepEqual(a[idx], b[idx])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  const aIsObject = isObject(a);\n  const bIsObject = isObject(b);\n  if (aIsObject !== bIsObject) {\n    return false;\n  }\n  if (a && b && aIsObject && bIsObject) {\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n    const aLength = aKeys.length;\n    const bLength = bKeys.length;\n    if (aLength !== bLength) {\n      return false;\n    }\n    for (let aKey of aKeys) {\n      if (!bKeys.includes(aKey)) {\n        return false;\n      }\n    }\n    for (let aKey of aKeys) {\n      if (!deepEqual(a[aKey], b[aKey])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}","map":{"version":3,"names":["isArray","isObject","isTypeof","deepEqual","a","b","isNaN","aIsArray","bIsArray","length","idx","aIsObject","bIsObject","aKeys","Object","keys","bKeys","aLength","bLength","aKey","includes"],"sources":["/home/egor/node_modules/@grafana/faro-core/src/utils/deepEqual.ts"],"sourcesContent":["import { isArray, isObject, isTypeof } from './is';\n\n// This function was inspired by fast-deep-equal\n// fast-deep-equal has issues with Rollup and also it checks for some edge cases that we don't need\n\nexport function deepEqual(a: any, b: any): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  // Using isTypeOf instead of isNumber as isNumber also checks against NaN\n  if (isTypeof(a, 'number') && isNaN(a as number)) {\n    return isTypeof(b, 'number') && isNaN(b as number);\n  }\n\n  const aIsArray = isArray(a);\n  const bIsArray = isArray(b);\n\n  if (aIsArray !== bIsArray) {\n    return false;\n  }\n\n  if (aIsArray && bIsArray) {\n    const length = a.length;\n\n    if (length !== b.length) {\n      return false;\n    }\n\n    for (let idx = length; idx-- !== 0; ) {\n      if (!deepEqual(a[idx], b[idx])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  const aIsObject = isObject(a);\n  const bIsObject = isObject(b);\n\n  if (aIsObject !== bIsObject) {\n    return false;\n  }\n\n  if (a && b && aIsObject && bIsObject) {\n    const aKeys = Object.keys(a) as Array<keyof typeof a>;\n    const bKeys = Object.keys(b);\n    const aLength = aKeys.length;\n    const bLength = bKeys.length;\n\n    if (aLength !== bLength) {\n      return false;\n    }\n\n    for (let aKey of aKeys) {\n      if (!bKeys.includes(aKey)) {\n        return false;\n      }\n    }\n\n    for (let aKey of aKeys) {\n      if (!deepEqual(a[aKey], b[aKey])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,MAAM;AAElD;AACA;AAEA,OAAM,SAAUC,SAASA,CAACC,CAAM,EAAEC,CAAM;EACtC,IAAID,CAAC,KAAKC,CAAC,EAAE;IACX,OAAO,IAAI;;EAGb;EACA,IAAIH,QAAQ,CAACE,CAAC,EAAE,QAAQ,CAAC,IAAIE,KAAK,CAACF,CAAW,CAAC,EAAE;IAC/C,OAAOF,QAAQ,CAACG,CAAC,EAAE,QAAQ,CAAC,IAAIC,KAAK,CAACD,CAAW,CAAC;;EAGpD,MAAME,QAAQ,GAAGP,OAAO,CAACI,CAAC,CAAC;EAC3B,MAAMI,QAAQ,GAAGR,OAAO,CAACK,CAAC,CAAC;EAE3B,IAAIE,QAAQ,KAAKC,QAAQ,EAAE;IACzB,OAAO,KAAK;;EAGd,IAAID,QAAQ,IAAIC,QAAQ,EAAE;IACxB,MAAMC,MAAM,GAAGL,CAAC,CAACK,MAAM;IAEvB,IAAIA,MAAM,KAAKJ,CAAC,CAACI,MAAM,EAAE;MACvB,OAAO,KAAK;;IAGd,KAAK,IAAIC,GAAG,GAAGD,MAAM,EAAEC,GAAG,EAAE,KAAK,CAAC,GAAI;MACpC,IAAI,CAACP,SAAS,CAACC,CAAC,CAACM,GAAG,CAAC,EAAEL,CAAC,CAACK,GAAG,CAAC,CAAC,EAAE;QAC9B,OAAO,KAAK;;;IAIhB,OAAO,IAAI;;EAGb,MAAMC,SAAS,GAAGV,QAAQ,CAACG,CAAC,CAAC;EAC7B,MAAMQ,SAAS,GAAGX,QAAQ,CAACI,CAAC,CAAC;EAE7B,IAAIM,SAAS,KAAKC,SAAS,EAAE;IAC3B,OAAO,KAAK;;EAGd,IAAIR,CAAC,IAAIC,CAAC,IAAIM,SAAS,IAAIC,SAAS,EAAE;IACpC,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACX,CAAC,CAA0B;IACrD,MAAMY,KAAK,GAAGF,MAAM,CAACC,IAAI,CAACV,CAAC,CAAC;IAC5B,MAAMY,OAAO,GAAGJ,KAAK,CAACJ,MAAM;IAC5B,MAAMS,OAAO,GAAGF,KAAK,CAACP,MAAM;IAE5B,IAAIQ,OAAO,KAAKC,OAAO,EAAE;MACvB,OAAO,KAAK;;IAGd,KAAK,IAAIC,IAAI,IAAIN,KAAK,EAAE;MACtB,IAAI,CAACG,KAAK,CAACI,QAAQ,CAACD,IAAI,CAAC,EAAE;QACzB,OAAO,KAAK;;;IAIhB,KAAK,IAAIA,IAAI,IAAIN,KAAK,EAAE;MACtB,IAAI,CAACV,SAAS,CAACC,CAAC,CAACe,IAAI,CAAC,EAAEd,CAAC,CAACc,IAAI,CAAC,CAAC,EAAE;QAChC,OAAO,KAAK;;;IAIhB,OAAO,IAAI;;EAGb,OAAO,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}