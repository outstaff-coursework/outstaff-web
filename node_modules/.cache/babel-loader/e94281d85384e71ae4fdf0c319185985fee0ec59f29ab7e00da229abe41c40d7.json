{"ast":null,"code":"export function initializeMetaAPI(_unpatchedConsole, internalLogger, _config, metas, _transports) {\n  internalLogger.debug('Initializing meta API');\n  let metaSession = undefined;\n  let metaUser = undefined;\n  let metaView = undefined;\n  const setUser = user => {\n    if (metaUser) {\n      metas.remove(metaUser);\n    }\n    metaUser = {\n      user\n    };\n    metas.add(metaUser);\n  };\n  const setSession = session => {\n    if (metaSession) {\n      metas.remove(metaSession);\n    }\n    metaSession = {\n      session\n    };\n    metas.add(metaSession);\n  };\n  const getSession = () => metas.value.session;\n  const setView = view => {\n    var _a;\n    if (((_a = metaView === null || metaView === void 0 ? void 0 : metaView.view) === null || _a === void 0 ? void 0 : _a.name) === (view === null || view === void 0 ? void 0 : view.name)) {\n      return;\n    }\n    const previousView = metaView;\n    metaView = {\n      view\n    };\n    metas.add(metaView);\n    if (previousView) {\n      metas.remove(previousView);\n    }\n  };\n  const getView = () => metas.value.view;\n  return {\n    setUser,\n    resetUser: setUser,\n    setSession,\n    resetSession: setSession,\n    getSession,\n    setView,\n    getView\n  };\n}","map":{"version":3,"names":["initializeMetaAPI","_unpatchedConsole","internalLogger","_config","metas","_transports","debug","metaSession","undefined","metaUser","metaView","setUser","user","remove","add","setSession","session","getSession","value","setView","view","_a","name","previousView","getView","resetUser","resetSession"],"sources":["/home/egor/node_modules/@grafana/faro-core/src/api/meta/initialize.ts"],"sourcesContent":["import type { Config } from '../../config';\nimport type { InternalLogger } from '../../internalLogger';\nimport type { Meta, Metas } from '../../metas';\nimport type { Transports } from '../../transports';\nimport type { UnpatchedConsole } from '../../unpatchedConsole';\n\nimport type { MetaAPI } from './types';\n\nexport function initializeMetaAPI(\n  _unpatchedConsole: UnpatchedConsole,\n  internalLogger: InternalLogger,\n  _config: Config,\n  metas: Metas,\n  _transports: Transports\n): MetaAPI {\n  internalLogger.debug('Initializing meta API');\n\n  let metaSession: Partial<Meta> | undefined = undefined;\n  let metaUser: Partial<Meta> | undefined = undefined;\n  let metaView: Partial<Meta> | undefined = undefined;\n\n  const setUser: MetaAPI['setUser'] = (user) => {\n    if (metaUser) {\n      metas.remove(metaUser);\n    }\n\n    metaUser = {\n      user,\n    };\n\n    metas.add(metaUser);\n  };\n\n  const setSession: MetaAPI['setSession'] = (session) => {\n    if (metaSession) {\n      metas.remove(metaSession);\n    }\n\n    metaSession = {\n      session,\n    };\n\n    metas.add(metaSession);\n  };\n\n  const getSession: MetaAPI['getSession'] = () => metas.value.session;\n\n  const setView: MetaAPI['setView'] = (view) => {\n    if (metaView?.view?.name === view?.name) {\n      return;\n    }\n\n    const previousView = metaView;\n\n    metaView = {\n      view,\n    };\n\n    metas.add(metaView);\n\n    if (previousView) {\n      metas.remove(previousView);\n    }\n  };\n\n  const getView: MetaAPI['getView'] = () => metas.value.view;\n\n  return {\n    setUser,\n    resetUser: setUser as MetaAPI['resetUser'],\n    setSession,\n    resetSession: setSession as MetaAPI['resetSession'],\n    getSession,\n    setView,\n    getView,\n  };\n}\n"],"mappings":"AAQA,OAAM,SAAUA,iBAAiBA,CAC/BC,iBAAmC,EACnCC,cAA8B,EAC9BC,OAAe,EACfC,KAAY,EACZC,WAAuB;EAEvBH,cAAc,CAACI,KAAK,CAAC,uBAAuB,CAAC;EAE7C,IAAIC,WAAW,GAA8BC,SAAS;EACtD,IAAIC,QAAQ,GAA8BD,SAAS;EACnD,IAAIE,QAAQ,GAA8BF,SAAS;EAEnD,MAAMG,OAAO,GAAwBC,IAAI,IAAI;IAC3C,IAAIH,QAAQ,EAAE;MACZL,KAAK,CAACS,MAAM,CAACJ,QAAQ,CAAC;;IAGxBA,QAAQ,GAAG;MACTG;KACD;IAEDR,KAAK,CAACU,GAAG,CAACL,QAAQ,CAAC;EACrB,CAAC;EAED,MAAMM,UAAU,GAA2BC,OAAO,IAAI;IACpD,IAAIT,WAAW,EAAE;MACfH,KAAK,CAACS,MAAM,CAACN,WAAW,CAAC;;IAG3BA,WAAW,GAAG;MACZS;KACD;IAEDZ,KAAK,CAACU,GAAG,CAACP,WAAW,CAAC;EACxB,CAAC;EAED,MAAMU,UAAU,GAA0BA,CAAA,KAAMb,KAAK,CAACc,KAAK,CAACF,OAAO;EAEnE,MAAMG,OAAO,GAAwBC,IAAI,IAAI;;IAC3C,IAAI,EAAAC,EAAA,GAAAX,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEU,IAAI,cAAAC,EAAA,uBAAAA,EAAA,CAAEC,IAAI,OAAKF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,IAAI,GAAE;MACvC;;IAGF,MAAMC,YAAY,GAAGb,QAAQ;IAE7BA,QAAQ,GAAG;MACTU;KACD;IAEDhB,KAAK,CAACU,GAAG,CAACJ,QAAQ,CAAC;IAEnB,IAAIa,YAAY,EAAE;MAChBnB,KAAK,CAACS,MAAM,CAACU,YAAY,CAAC;;EAE9B,CAAC;EAED,MAAMC,OAAO,GAAuBA,CAAA,KAAMpB,KAAK,CAACc,KAAK,CAACE,IAAI;EAE1D,OAAO;IACLT,OAAO;IACPc,SAAS,EAAEd,OAA+B;IAC1CI,UAAU;IACVW,YAAY,EAAEX,UAAqC;IACnDE,UAAU;IACVE,OAAO;IACPK;GACD;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}