{"ast":null,"code":"import { genShortID } from '@grafana/faro-core';\nimport { RESOURCE_ENTRY } from './performanceConstants';\nimport { calculateFaroResourceTiming, entryUrlIsIgnored } from './performanceUtils';\nexport function observeResourceTimings(faroNavigationId, pushEvent, ignoredUrls) {\n  const observer = new PerformanceObserver(observedEntries => {\n    const entries = observedEntries.getEntries();\n    for (const resourceEntryRaw of entries) {\n      if (entryUrlIsIgnored(ignoredUrls, resourceEntryRaw.name)) {\n        return;\n      }\n      const faroResourceEntry = Object.assign(Object.assign({}, calculateFaroResourceTiming(resourceEntryRaw.toJSON())), {\n        faroNavigationId,\n        faroResourceId: genShortID()\n      });\n      pushEvent('faro.performance.resource', faroResourceEntry);\n    }\n  });\n  observer.observe({\n    type: RESOURCE_ENTRY,\n    buffered: true\n  });\n}","map":{"version":3,"names":["genShortID","RESOURCE_ENTRY","calculateFaroResourceTiming","entryUrlIsIgnored","observeResourceTimings","faroNavigationId","pushEvent","ignoredUrls","observer","PerformanceObserver","observedEntries","entries","getEntries","resourceEntryRaw","name","faroResourceEntry","Object","assign","toJSON","faroResourceId","observe","type","buffered"],"sources":["/home/egor/node_modules/@grafana/faro-web-sdk/src/instrumentations/performance/resource.ts"],"sourcesContent":["import { genShortID } from '@grafana/faro-core';\nimport type { EventsAPI } from '@grafana/faro-core';\n\nimport { RESOURCE_ENTRY } from './performanceConstants';\nimport { calculateFaroResourceTiming, entryUrlIsIgnored } from './performanceUtils';\n\nexport function observeResourceTimings(\n  faroNavigationId: string,\n  pushEvent: EventsAPI['pushEvent'],\n  ignoredUrls: Array<string | RegExp>\n) {\n  const observer = new PerformanceObserver((observedEntries) => {\n    const entries = observedEntries.getEntries();\n\n    for (const resourceEntryRaw of entries) {\n      if (entryUrlIsIgnored(ignoredUrls, resourceEntryRaw.name)) {\n        return;\n      }\n\n      const faroResourceEntry = {\n        ...calculateFaroResourceTiming(resourceEntryRaw.toJSON()),\n        faroNavigationId,\n        faroResourceId: genShortID(),\n      };\n\n      pushEvent('faro.performance.resource', faroResourceEntry);\n    }\n  });\n\n  observer.observe({\n    type: RESOURCE_ENTRY,\n    buffered: true,\n  });\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,oBAAoB;AAG/C,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,2BAA2B,EAAEC,iBAAiB,QAAQ,oBAAoB;AAEnF,OAAM,SAAUC,sBAAsBA,CACpCC,gBAAwB,EACxBC,SAAiC,EACjCC,WAAmC;EAEnC,MAAMC,QAAQ,GAAG,IAAIC,mBAAmB,CAAEC,eAAe,IAAI;IAC3D,MAAMC,OAAO,GAAGD,eAAe,CAACE,UAAU,EAAE;IAE5C,KAAK,MAAMC,gBAAgB,IAAIF,OAAO,EAAE;MACtC,IAAIR,iBAAiB,CAACI,WAAW,EAAEM,gBAAgB,CAACC,IAAI,CAAC,EAAE;QACzD;;MAGF,MAAMC,iBAAiB,GAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAClBf,2BAA2B,CAACW,gBAAgB,CAACK,MAAM,EAAE,CAAC;QACzDb,gBAAgB;QAChBc,cAAc,EAAEnB,UAAU;MAAE,EAC7B;MAEDM,SAAS,CAAC,2BAA2B,EAAES,iBAAiB,CAAC;;EAE7D,CAAC,CAAC;EAEFP,QAAQ,CAACY,OAAO,CAAC;IACfC,IAAI,EAAEpB,cAAc;IACpBqB,QAAQ,EAAE;GACX,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}