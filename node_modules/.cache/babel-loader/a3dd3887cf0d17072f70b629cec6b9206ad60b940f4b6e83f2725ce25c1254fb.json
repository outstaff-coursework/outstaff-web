{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { noopDetectorSync } from './NoopDetectorSync';\nvar NoopDetector = /** @class */function () {\n  function NoopDetector() {}\n  NoopDetector.prototype.detect = function () {\n    return Promise.resolve(noopDetectorSync.detect());\n  };\n  return NoopDetector;\n}();\nexport { NoopDetector };\nexport var noopDetector = new NoopDetector();","map":{"version":3,"names":["noopDetectorSync","NoopDetector","prototype","detect","Promise","resolve","noopDetector"],"sources":["/home/egor/node_modules/@opentelemetry/resources/src/detectors/NoopDetector.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Detector } from '../types';\nimport { IResource } from '../IResource';\nimport { noopDetectorSync } from './NoopDetectorSync';\n\nexport class NoopDetector implements Detector {\n  detect(): Promise<IResource> {\n    return Promise.resolve(noopDetectorSync.detect());\n  }\n}\n\nexport const noopDetector = new NoopDetector();\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAkBA,SAASA,gBAAgB,QAAQ,oBAAoB;AAErD,IAAAC,YAAA;EAAA,SAAAA,aAAA,GAIA;EAHEA,YAAA,CAAAC,SAAA,CAAAC,MAAM,GAAN;IACE,OAAOC,OAAO,CAACC,OAAO,CAACL,gBAAgB,CAACG,MAAM,EAAE,CAAC;EACnD,CAAC;EACH,OAAAF,YAAC;AAAD,CAAC,CAJD;;AAMA,OAAO,IAAMK,YAAY,GAAG,IAAIL,YAAY,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}