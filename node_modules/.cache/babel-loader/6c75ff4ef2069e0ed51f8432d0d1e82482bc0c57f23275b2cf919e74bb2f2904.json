{"ast":null,"code":"import { defaultExceptionType } from '@grafana/faro-core';\nimport { valueTypeRegex } from './const';\nexport function getValueAndTypeFromMessage(message) {\n  var _a, _b;\n  const groups = message.match(valueTypeRegex);\n  const type = (_a = groups === null || groups === void 0 ? void 0 : groups[1]) !== null && _a !== void 0 ? _a : defaultExceptionType;\n  const value = (_b = groups === null || groups === void 0 ? void 0 : groups[2]) !== null && _b !== void 0 ? _b : message;\n  return [value, type];\n}","map":{"version":3,"names":["defaultExceptionType","valueTypeRegex","getValueAndTypeFromMessage","message","groups","match","type","_a","value","_b"],"sources":["/home/egor/node_modules/@grafana/faro-web-sdk/src/instrumentations/errors/getValueAndTypeFromMessage.ts"],"sourcesContent":["import { defaultExceptionType } from '@grafana/faro-core';\n\nimport { valueTypeRegex } from './const';\n\nexport function getValueAndTypeFromMessage(message: string): [string, string] {\n  const groups = message.match(valueTypeRegex);\n\n  const type = groups?.[1] ?? defaultExceptionType;\n  const value = groups?.[2] ?? message;\n\n  return [value, type];\n}\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,oBAAoB;AAEzD,SAASC,cAAc,QAAQ,SAAS;AAExC,OAAM,SAAUC,0BAA0BA,CAACC,OAAe;;EACxD,MAAMC,MAAM,GAAGD,OAAO,CAACE,KAAK,CAACJ,cAAc,CAAC;EAE5C,MAAMK,IAAI,GAAG,CAAAC,EAAA,GAAAH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAG,CAAC,CAAC,cAAAG,EAAA,cAAAA,EAAA,GAAIP,oBAAoB;EAChD,MAAMQ,KAAK,GAAG,CAAAC,EAAA,GAAAL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAG,CAAC,CAAC,cAAAK,EAAA,cAAAA,EAAA,GAAIN,OAAO;EAEpC,OAAO,CAACK,KAAK,EAAEF,IAAI,CAAC;AACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}