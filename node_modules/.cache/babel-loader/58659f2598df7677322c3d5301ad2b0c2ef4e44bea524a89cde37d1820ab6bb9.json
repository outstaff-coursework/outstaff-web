{"ast":null,"code":"import { ConsoleInstrumentation, ErrorsInstrumentation, PerformanceInstrumentation, SessionInstrumentation, ViewInstrumentation, WebVitalsInstrumentation } from '../instrumentations';\nexport function getWebInstrumentations(options = {}) {\n  const instrumentations = [new ErrorsInstrumentation(), new WebVitalsInstrumentation(), new SessionInstrumentation(), new ViewInstrumentation()];\n  if (options.enablePerformanceInstrumentation === true) {\n    // ensure that it gets initialized as early as possible\n    instrumentations.unshift(new PerformanceInstrumentation());\n  }\n  if (options.captureConsole !== false) {\n    instrumentations.push(new ConsoleInstrumentation({\n      disabledLevels: options.captureConsoleDisabledLevels\n    }));\n  }\n  return instrumentations;\n}","map":{"version":3,"names":["ConsoleInstrumentation","ErrorsInstrumentation","PerformanceInstrumentation","SessionInstrumentation","ViewInstrumentation","WebVitalsInstrumentation","getWebInstrumentations","options","instrumentations","enablePerformanceInstrumentation","unshift","captureConsole","push","disabledLevels","captureConsoleDisabledLevels"],"sources":["/home/egor/node_modules/@grafana/faro-web-sdk/src/config/getWebInstrumentations.ts"],"sourcesContent":["import type { Instrumentation } from '@grafana/faro-core';\n\nimport {\n  ConsoleInstrumentation,\n  ErrorsInstrumentation,\n  PerformanceInstrumentation,\n  SessionInstrumentation,\n  ViewInstrumentation,\n  WebVitalsInstrumentation,\n} from '../instrumentations';\n\nimport type { GetWebInstrumentationsOptions } from './types';\n\nexport function getWebInstrumentations(options: GetWebInstrumentationsOptions = {}): Instrumentation[] {\n  const instrumentations: Instrumentation[] = [\n    new ErrorsInstrumentation(),\n    new WebVitalsInstrumentation(),\n    new SessionInstrumentation(),\n    new ViewInstrumentation(),\n  ];\n\n  if (options.enablePerformanceInstrumentation === true) {\n    // ensure that it gets initialized as early as possible\n    instrumentations.unshift(new PerformanceInstrumentation());\n  }\n\n  if (options.captureConsole !== false) {\n    instrumentations.push(\n      new ConsoleInstrumentation({\n        disabledLevels: options.captureConsoleDisabledLevels,\n      })\n    );\n  }\n\n  return instrumentations;\n}\n"],"mappings":"AAEA,SACEA,sBAAsB,EACtBC,qBAAqB,EACrBC,0BAA0B,EAC1BC,sBAAsB,EACtBC,mBAAmB,EACnBC,wBAAwB,QACnB,qBAAqB;AAI5B,OAAM,SAAUC,sBAAsBA,CAACC,OAAA,GAAyC,EAAE;EAChF,MAAMC,gBAAgB,GAAsB,CAC1C,IAAIP,qBAAqB,EAAE,EAC3B,IAAII,wBAAwB,EAAE,EAC9B,IAAIF,sBAAsB,EAAE,EAC5B,IAAIC,mBAAmB,EAAE,CAC1B;EAED,IAAIG,OAAO,CAACE,gCAAgC,KAAK,IAAI,EAAE;IACrD;IACAD,gBAAgB,CAACE,OAAO,CAAC,IAAIR,0BAA0B,EAAE,CAAC;;EAG5D,IAAIK,OAAO,CAACI,cAAc,KAAK,KAAK,EAAE;IACpCH,gBAAgB,CAACI,IAAI,CACnB,IAAIZ,sBAAsB,CAAC;MACzBa,cAAc,EAAEN,OAAO,CAACO;KACzB,CAAC,CACH;;EAGH,OAAON,gBAAgB;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}