{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Deferred = /** @class */function () {\n  function Deferred() {\n    var _this = this;\n    this._promise = new Promise(function (resolve, reject) {\n      _this._resolve = resolve;\n      _this._reject = reject;\n    });\n  }\n  Object.defineProperty(Deferred.prototype, \"promise\", {\n    get: function () {\n      return this._promise;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Deferred.prototype.resolve = function (val) {\n    this._resolve(val);\n  };\n  Deferred.prototype.reject = function (err) {\n    this._reject(err);\n  };\n  return Deferred;\n}();\nexport { Deferred };","map":{"version":3,"names":["Deferred","_this","_promise","Promise","resolve","reject","_resolve","_reject","Object","defineProperty","prototype","get","val","err"],"sources":["/home/egor/node_modules/@opentelemetry/core/src/utils/promise.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<T> {\n  private _promise: Promise<T>;\n  private _resolve!: (val: T) => void;\n  private _reject!: (error: unknown) => void;\n  constructor() {\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  get promise() {\n    return this._promise;\n  }\n\n  resolve(val: T) {\n    this._resolve(val);\n  }\n\n  reject(err: unknown) {\n    this._reject(err);\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,IAAAA,QAAA;EAIE,SAAAA,SAAA;IAAA,IAAAC,KAAA;IACE,IAAI,CAACC,QAAQ,GAAG,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM;MAC1CJ,KAAI,CAACK,QAAQ,GAAGF,OAAO;MACvBH,KAAI,CAACM,OAAO,GAAGF,MAAM;IACvB,CAAC,CAAC;EACJ;EAEAG,MAAA,CAAAC,cAAA,CAAIT,QAAA,CAAAU,SAAA,WAAO;SAAX,SAAAC,CAAA;MACE,OAAO,IAAI,CAACT,QAAQ;IACtB,CAAC;;;;EAEDF,QAAA,CAAAU,SAAA,CAAAN,OAAO,GAAP,UAAQQ,GAAM;IACZ,IAAI,CAACN,QAAQ,CAACM,GAAG,CAAC;EACpB,CAAC;EAEDZ,QAAA,CAAAU,SAAA,CAAAL,MAAM,GAAN,UAAOQ,GAAY;IACjB,IAAI,CAACN,OAAO,CAACM,GAAG,CAAC;EACnB,CAAC;EACH,OAAAb,QAAC;AAAD,CAAC,CAtBD"},"metadata":{},"sourceType":"module","externalDependencies":[]}