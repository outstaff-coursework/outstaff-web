{"ast":null,"code":"import { isPrimitive } from '@grafana/faro-core';\nimport { primitiveUnhandledType, primitiveUnhandledValue } from './const';\nimport { getErrorDetails } from './getErrorDetails';\nexport function registerOnunhandledrejection(api) {\n  window.addEventListener('unhandledrejection', evt => {\n    var _a, _b;\n    let error = evt;\n    if (error.reason) {\n      error = evt.reason;\n    } else if ((_a = evt.detail) === null || _a === void 0 ? void 0 : _a.reason) {\n      error = (_b = evt.detail) === null || _b === void 0 ? void 0 : _b.reason;\n    }\n    let value;\n    let type;\n    let stackFrames = [];\n    if (isPrimitive(error)) {\n      value = \"\".concat(primitiveUnhandledValue, \" \").concat(String(error));\n      type = primitiveUnhandledType;\n    } else {\n      [value, type, stackFrames] = getErrorDetails(error);\n    }\n    if (value) {\n      api.pushError(new Error(value), {\n        type,\n        stackFrames\n      });\n    }\n  });\n}","map":{"version":3,"names":["isPrimitive","primitiveUnhandledType","primitiveUnhandledValue","getErrorDetails","registerOnunhandledrejection","api","window","addEventListener","evt","error","reason","_a","detail","_b","value","type","stackFrames","concat","String","pushError","Error"],"sources":["/home/egor/node_modules/@grafana/faro-web-sdk/src/instrumentations/errors/registerOnunhandledrejection.ts"],"sourcesContent":["import { ExceptionStackFrame, isPrimitive } from '@grafana/faro-core';\nimport type { API } from '@grafana/faro-core';\n\nimport { primitiveUnhandledType, primitiveUnhandledValue } from './const';\nimport { getErrorDetails } from './getErrorDetails';\nimport type { ExtendedPromiseRejectionEvent } from './types';\n\nexport function registerOnunhandledrejection(api: API): void {\n  window.addEventListener('unhandledrejection', (evt: ExtendedPromiseRejectionEvent) => {\n    let error = evt;\n\n    if (error.reason) {\n      error = evt.reason;\n    } else if (evt.detail?.reason) {\n      error = evt.detail?.reason;\n    }\n\n    let value: string | undefined;\n    let type: string | undefined;\n    let stackFrames: ExceptionStackFrame[] = [];\n    if (isPrimitive(error)) {\n      value = `${primitiveUnhandledValue} ${String(error)}`;\n      type = primitiveUnhandledType;\n    } else {\n      [value, type, stackFrames] = getErrorDetails(error);\n    }\n\n    if (value) {\n      api.pushError(new Error(value), { type, stackFrames });\n    }\n  });\n}\n"],"mappings":"AAAA,SAA8BA,WAAW,QAAQ,oBAAoB;AAGrE,SAASC,sBAAsB,EAAEC,uBAAuB,QAAQ,SAAS;AACzE,SAASC,eAAe,QAAQ,mBAAmB;AAGnD,OAAM,SAAUC,4BAA4BA,CAACC,GAAQ;EACnDC,MAAM,CAACC,gBAAgB,CAAC,oBAAoB,EAAGC,GAAkC,IAAI;;IACnF,IAAIC,KAAK,GAAGD,GAAG;IAEf,IAAIC,KAAK,CAACC,MAAM,EAAE;MAChBD,KAAK,GAAGD,GAAG,CAACE,MAAM;KACnB,MAAM,IAAI,CAAAC,EAAA,GAAAH,GAAG,CAACI,MAAM,cAAAD,EAAA,uBAAAA,EAAA,CAAED,MAAM,EAAE;MAC7BD,KAAK,GAAG,CAAAI,EAAA,GAAAL,GAAG,CAACI,MAAM,cAAAC,EAAA,uBAAAA,EAAA,CAAEH,MAAM;;IAG5B,IAAII,KAAyB;IAC7B,IAAIC,IAAwB;IAC5B,IAAIC,WAAW,GAA0B,EAAE;IAC3C,IAAIhB,WAAW,CAACS,KAAK,CAAC,EAAE;MACtBK,KAAK,MAAAG,MAAA,CAAMf,uBAAuB,OAAAe,MAAA,CAAIC,MAAM,CAACT,KAAK,CAAC,CAAE;MACrDM,IAAI,GAAGd,sBAAsB;KAC9B,MAAM;MACL,CAACa,KAAK,EAAEC,IAAI,EAAEC,WAAW,CAAC,GAAGb,eAAe,CAACM,KAAK,CAAC;;IAGrD,IAAIK,KAAK,EAAE;MACTT,GAAG,CAACc,SAAS,CAAC,IAAIC,KAAK,CAACN,KAAK,CAAC,EAAE;QAAEC,IAAI;QAAEC;MAAW,CAAE,CAAC;;EAE1D,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}