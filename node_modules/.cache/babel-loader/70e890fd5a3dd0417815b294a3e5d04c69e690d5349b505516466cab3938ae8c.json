{"ast":null,"code":"export { defaultExceptionType } from './api';\nexport { BaseExtension } from './extensions';\nexport { globalObject } from './globalObject';\nexport { initializeFaro } from './initialize';\nexport { defaultBatchingConfig, defaultGlobalObjectKey } from './config';\nexport { BaseInstrumentation } from './instrumentations';\nexport { createInternalLogger, defaultInternalLoggerLevel, InternalLoggerLevel } from './internalLogger';\nexport { faro, getInternalFaroFromGlobalObject, internalGlobalObjectKey, isInternalFaroOnGlobalObject, setInternalFaroOnGlobalObject } from './sdk';\nexport * from './semantic';\nexport { BaseTransport, getTransportBody, TransportItemType, transportItemTypeToBodyKey } from './transports';\nexport { defaultUnpatchedConsole } from './unpatchedConsole';\nexport { allLogLevels, createPromiseBuffer, deepEqual, defaultLogLevel, genShortID, getCurrentTimestamp, isArray, isBoolean, isDomError, isDomException, isElement, isElementDefined, isError, isErrorDefined, isErrorEvent, isEvent, isEventDefined, isFunction, isInstanceOf, isInt, isMap, isMapDefined, isNull, isNumber, isObject, isPrimitive, isRegExp, isString, isSymbol, isSyntheticEvent, isThenable, isToString, isTypeof, isUndefined, LogLevel, noop, dateNow } from './utils';\nexport { VERSION } from './version';","map":{"version":3,"names":["defaultExceptionType","BaseExtension","globalObject","initializeFaro","defaultBatchingConfig","defaultGlobalObjectKey","BaseInstrumentation","createInternalLogger","defaultInternalLoggerLevel","InternalLoggerLevel","faro","getInternalFaroFromGlobalObject","internalGlobalObjectKey","isInternalFaroOnGlobalObject","setInternalFaroOnGlobalObject","BaseTransport","getTransportBody","TransportItemType","transportItemTypeToBodyKey","defaultUnpatchedConsole","allLogLevels","createPromiseBuffer","deepEqual","defaultLogLevel","genShortID","getCurrentTimestamp","isArray","isBoolean","isDomError","isDomException","isElement","isElementDefined","isError","isErrorDefined","isErrorEvent","isEvent","isEventDefined","isFunction","isInstanceOf","isInt","isMap","isMapDefined","isNull","isNumber","isObject","isPrimitive","isRegExp","isString","isSymbol","isSyntheticEvent","isThenable","isToString","isTypeof","isUndefined","LogLevel","noop","dateNow","VERSION"],"sources":["/home/egor/node_modules/@grafana/faro-core/src/index.ts"],"sourcesContent":["export { defaultExceptionType } from './api';\nexport type {\n  API,\n  APIEvent,\n  EventAttributes,\n  EventEvent,\n  EventsAPI,\n  ExceptionEvent,\n  ExceptionStackFrame,\n  ExceptionsAPI,\n  ExtendedError,\n  LogContext,\n  LogEvent,\n  LogsAPI,\n  MeasurementEvent,\n  MeasurementsAPI,\n  MetaAPI,\n  OTELApi,\n  PushErrorOptions,\n  PushLogOptions,\n  PushMeasurementOptions,\n  Stacktrace,\n  StacktraceParser,\n  TraceContext,\n  TraceEvent,\n  TracesAPI,\n} from './api';\n\nexport { BaseExtension } from './extensions';\nexport type { Extension } from './extensions';\n\nexport { globalObject } from './globalObject';\nexport type { GlobalObject } from './globalObject';\n\nexport { initializeFaro } from './initialize';\n\nexport { defaultBatchingConfig, defaultGlobalObjectKey } from './config';\nexport type { Config, Patterns } from './config';\n\nexport { BaseInstrumentation } from './instrumentations';\nexport type { Instrumentation, Instrumentations } from './instrumentations';\n\nexport { createInternalLogger, defaultInternalLoggerLevel, InternalLoggerLevel } from './internalLogger';\nexport type { InternalLogger } from './internalLogger';\n\nexport type {\n  Meta,\n  MetaApp,\n  MetaAttributes,\n  MetaBrowser,\n  MetaGetter,\n  MetaItem,\n  MetaPage,\n  Metas,\n  MetaSDK,\n  MetaSDKIntegration,\n  MetaSession,\n  MetaUser,\n  MetaView,\n} from './metas';\n\nexport {\n  faro,\n  getInternalFaroFromGlobalObject,\n  internalGlobalObjectKey,\n  isInternalFaroOnGlobalObject,\n  setInternalFaroOnGlobalObject,\n} from './sdk';\nexport type { Faro } from './sdk';\n\nexport * from './semantic';\n\nexport { BaseTransport, getTransportBody, TransportItemType, transportItemTypeToBodyKey } from './transports';\nexport type {\n  BeforeSendHook,\n  SendFn,\n  Transport,\n  TransportBody,\n  TransportItem,\n  TransportItemPayload,\n  Transports,\n} from './transports';\n\nexport { defaultUnpatchedConsole } from './unpatchedConsole';\nexport type { UnpatchedConsole } from './unpatchedConsole';\n\nexport {\n  allLogLevels,\n  createPromiseBuffer,\n  deepEqual,\n  defaultLogLevel,\n  genShortID,\n  getCurrentTimestamp,\n  isArray,\n  isBoolean,\n  isDomError,\n  isDomException,\n  isElement,\n  isElementDefined,\n  isError,\n  isErrorDefined,\n  isErrorEvent,\n  isEvent,\n  isEventDefined,\n  isFunction,\n  isInstanceOf,\n  isInt,\n  isMap,\n  isMapDefined,\n  isNull,\n  isNumber,\n  isObject,\n  isPrimitive,\n  isRegExp,\n  isString,\n  isSymbol,\n  isSyntheticEvent,\n  isThenable,\n  isToString,\n  isTypeof,\n  isUndefined,\n  LogLevel,\n  noop,\n  dateNow,\n} from './utils';\nexport type {\n  BaseObject,\n  BaseObjectKey,\n  BaseObjectPrimitiveValue,\n  BaseObjectValue,\n  BufferItem,\n  PromiseBuffer,\n  PromiseBufferOptions,\n  PromiseProducer,\n} from './utils';\n\nexport { VERSION } from './version';\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,OAAO;AA4B5C,SAASC,aAAa,QAAQ,cAAc;AAG5C,SAASC,YAAY,QAAQ,gBAAgB;AAG7C,SAASC,cAAc,QAAQ,cAAc;AAE7C,SAASC,qBAAqB,EAAEC,sBAAsB,QAAQ,UAAU;AAGxE,SAASC,mBAAmB,QAAQ,oBAAoB;AAGxD,SAASC,oBAAoB,EAAEC,0BAA0B,EAAEC,mBAAmB,QAAQ,kBAAkB;AAmBxG,SACEC,IAAI,EACJC,+BAA+B,EAC/BC,uBAAuB,EACvBC,4BAA4B,EAC5BC,6BAA6B,QACxB,OAAO;AAGd,cAAc,YAAY;AAE1B,SAASC,aAAa,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAEC,0BAA0B,QAAQ,cAAc;AAW7G,SAASC,uBAAuB,QAAQ,oBAAoB;AAG5D,SACEC,YAAY,EACZC,mBAAmB,EACnBC,SAAS,EACTC,eAAe,EACfC,UAAU,EACVC,mBAAmB,EACnBC,OAAO,EACPC,SAAS,EACTC,UAAU,EACVC,cAAc,EACdC,SAAS,EACTC,gBAAgB,EAChBC,OAAO,EACPC,cAAc,EACdC,YAAY,EACZC,OAAO,EACPC,cAAc,EACdC,UAAU,EACVC,YAAY,EACZC,KAAK,EACLC,KAAK,EACLC,YAAY,EACZC,MAAM,EACNC,QAAQ,EACRC,QAAQ,EACRC,WAAW,EACXC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,gBAAgB,EAChBC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRC,WAAW,EACXC,QAAQ,EACRC,IAAI,EACJC,OAAO,QACF,SAAS;AAYhB,SAASC,OAAO,QAAQ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}